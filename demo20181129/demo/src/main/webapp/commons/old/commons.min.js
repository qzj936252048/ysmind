
//class为tablelist的表格隔行换色
$('.tablelist tbody tr:odd').addClass('odd');



/**
 * 锁屏显示加载中，关闭用loadingDialog.close();
 * @param val 显示的文字，类似loading...
 * @returns
 */
function lockAndLoading(val)
{
	var loadingDialog = window.parent.art.dialog({
	    title: null,
	    background:'#E7EDF2',
	    content: "<div class='aui_loading_mine'><span style='padding-left:40px;padding-top:7px;font-size:13px;'>"+val+"</span></div>",
	    icon: null,
	    cancel:false,
	    lock:true,
	    width:'auto'
	});
	return loadingDialog;
}

//打开一个窗体ckfinder用到
/*function windowOpen(url, name, width, height){
	var top=parseInt((window.screen.height-height)/2,10),left=parseInt((window.screen.width-width)/2,10),
		options="location=no,menubar=no,toolbar=no,dependent=yes,minimizable=no,modal=yes,alwaysRaised=yes,"+
		"resizable=yes,scrollbars=yes,"+"width="+width+",height="+height+",top="+top+",left="+left;
	window.open(url ,name , options);
}*/

/**
 * 窗口右下角弹出提示窗口的实现函数
 */
artDialog.notice = function (options,refresh) {  
    var opt = options || {},  
        api, aConfig, hide, wrap, top,  
        duration = 800;  
    var config = {  
        id: 'Notice',  
        left: '100%',  
        top: '100%',  
        fixed: true,  
        drag: false,  
        resize: false,  
        follow: null,  
        lock: false,  
        init: function(here){  
            api = this;  
            aConfig = api.config;  
            wrap = api.DOM.wrap;  
            top = parseInt(wrap[0].style.top);  
            hide = top + wrap[0].offsetHeight;  
            wrap.css('top', hide + 'px')  
                .animate({top: top + 'px'}, duration, function () {  
                    opt.init && opt.init.call(api, here);  
                });  
        },  
        close: function(here){  
            wrap.animate({top: hide + 'px'}, duration, function () {  
                opt.close && opt.close.call(this, here);  
                aConfig.close = $.noop;  
                api.close();  
            }); 
            if(refresh)
        	{
            	window.location.reload(); 
        	}
            return false;  
        }  
    };    
      
    for (var i in opt) {  
        if (config[i] === undefined) config[i] = opt[i];  
    };  
      
    return artDialog(config);  
};

/**
 * 关闭art.dialog弹出的窗口
 */
function closePage(){
	art.dialog.data("returnObj","");
	art.dialog.close();
}

/**
 * 分页函数
 * @param n pageNo
 * @param s pageSize
 * @returns {Boolean}
 */
function page(n,s){
	$("#pageNo").val(n);
	$("#pageSize").val(s);
	$("#searchForm").submit();
	return false;
}

/**
 * 列表的选中与去选
 * @param dictId id值
 */
function selectCheck(dictId){
	var va = document.getElementById("select"+dictId);
	if(va.checked==true)
	{
		va.checked=false;
	}else{
		va.checked=true
	}
}

/**
 * 全选与全去选函数
 * @param val 当前点击的对象
 */
function selectAll(val){
	var selectedVal = val.value;
	if(!val.checked)
	{
		$("input[name="+selectedVal+"]:checked").attr("checked",false);
	}
	else
	{
		$("input[name="+selectedVal+"]").attr("checked",true);
	}
}

/**
 * 在右下角弹出提示选择数据的提示框
 * @param title
 * @param content
 * @param icon
 * @param reloadornot
 * @param widths
 * @param heights
 * @param times
 */
function showNotice(title,content,icon,reloadornot,widths,heights,times){
	if(reloadornot==null || reloadornot=="undefined"){reloadornot=true;}
	if(content==null || content == ""){reloadornot=false;}
	if(!widths){widths="220";}
	if(!heights){heights="100";}
	if(!times){times=5;}
	art.dialog.notice({  
	    title: title,  
	    width: widths,
	    height:heights,
	    content: content,  
	    icon: icon,//error、face-sad、face-smile、question、succeed、warning、
	    time: times//多少秒后消失
	},reloadornot); 
}

/**
 * 公用打开添加页面函数
 * @param url 打开页面的url
 * @param title 添加页面的标题
 * @param widths 添加页面的宽度
 * @param heights 添加页面的高度
 * @param lock 是否锁屏
 * @returns 
 */
function addData(url,title,widths,heights,lock,resize){
	art.dialog.data("returnObj","");//用于传值到打开的页面，如果不传值则不需要。还有一个作用，每次打开的时候清空上次打开的时候回传的值
	var windowId = Math.floor(Math.random() * ( 100000 + 1));
	if(!title || title == ""){title="新增数据";}
	if(!widths){widths="730px";}
	if(!heights){heights="65%";}
	if(lock==null || lock == ""){lock=true;}//是否锁屏
	if(resize==null || resize == ""){resize=true;}//是否调整弹出窗口大小
	art.dialog.open(url, {
		id : windowId,
		title : title,
		width : widths,
		height : heights,
		lock : lock,
		opacity : 0.1,// 透明度  
		resize : resize,
		close : function() {
			var returnObj = art.dialog.data("returnObj");
			if(returnObj!="")
			{
				if(returnObj[0]=="0")
				{
					showNotice('新增数据成功',returnObj[1],'succeed',true,null,null,2);
				}
				else
				{
					showNotice('新增数据失败',returnObj[1],'face-sad',false,null,null,2);
				}
			}
		}
	}, false);
}

/**
 * 公用打开编辑页面函数
 * @param url 打开页面的url
 * @param id id可传可不传，不传则根据记录前面所选复选框选中的记录作为要修改的记录
 * @param title 编辑页面的标题
 * @param widths 编辑页面的宽度
 * @param heights 编辑页面的高度
 * @param lock 是否锁屏
 * @returns 
 */
function copyData(url,id,title,widths,heights,lock,resize) {
	art.dialog.data("returnObj","");//用于传值到打开的页面，如果不传值则不需要。还有一个作用，每次打开的时候清空上次打开的时候回传的值
	var windowId = Math.floor(Math.random() * ( 100000 + 1));
	if(!title || title == ""){title="修改数据";}
	if(!widths){widths="730px";}
	if(!heights){heights="65%";}
	if(lock==null || lock == ""){lock=true;}
	if(resize==null || resize == ""){resize=true;}//是否调整弹出窗口大小
	if(!id)
	{
		var selectnum = $("input[name='checkBoxData']:checked").length;
		if (selectnum == 0) {
			art.dialog.alert("请选中你所需要操作的记录");
			return null;
		} else if (selectnum > 1) {
			art.dialog.alert("当前操作只能选择一条记录");
			return null;
		}
		id = $("input[name='checkBoxData']:checked")[0].value;
	}
	url = url+"?copy=copy&id="+ id;
	art.dialog.open(url, {
		id : windowId,
		title : title,
		width : widths,
		height : heights,
		lock : lock,
		opacity : 0.1,
		resize : resize,
		close : function() {
			var returnObj = art.dialog.data("returnObj");
			//art.dialog.alert(returnObj);//console.log(returnObj);
			if(returnObj!="")
			{
				if(returnObj[0]=="0")
				{
					showNotice('修改数据成功',returnObj[1],'succeed',true,null,null,2);
				}
				else
				{
					showNotice('修改数据失败',returnObj[1],'face-sad',false,null,null,2);
				}
			}
			
		}
	}, false);
}

/**
 * 公用打开编辑页面函数
 * @param url 打开页面的url
 * @param id id可传可不传，不传则根据记录前面所选复选框选中的记录作为要修改的记录
 * @param title 编辑页面的标题
 * @param widths 编辑页面的宽度
 * @param heights 编辑页面的高度
 * @param lock 是否锁屏
 * @returns 
 */
function editData(url,id,title,widths,heights,lock,resize) {
	art.dialog.data("returnObj","");//用于传值到打开的页面，如果不传值则不需要。还有一个作用，每次打开的时候清空上次打开的时候回传的值
	var windowId = Math.floor(Math.random() * ( 100000 + 1));
	if(!title || title == ""){title="修改数据";}
	if(!widths){widths="730px";}
	if(!heights){heights="65%";}
	if(lock==null || lock == ""){lock=true;}
	if(resize==null || resize == ""){resize=true;}//是否调整弹出窗口大小
	if(!id)
	{
		var selectnum = $("input[name='checkBoxData']:checked").length;
		if (selectnum == 0) {
			art.dialog.alert("请选中你所需要操作的记录");
			return null;
		} else if (selectnum > 1) {
			art.dialog.alert("当前操作只能选择一条记录");
			return null;
		}
		id = $("input[name='checkBoxData']:checked")[0].value;
	}
	url = url+"?id="+ id;
	art.dialog.open(url, {
		id : windowId,
		title : title,
		width : widths,
		height : heights,
		lock : lock,
		opacity : 0.1,
		resize : resize,
		close : function() {
			var returnObj = art.dialog.data("returnObj");
			//art.dialog.alert(returnObj);//console.log(returnObj);
			if(returnObj!="")
			{
				if(returnObj[0]=="0")
				{
					showNotice('修改数据成功',returnObj[1],'succeed',true,null,null,2);
				}
				else
				{
					showNotice('修改数据失败',returnObj[1],'face-sad',false,null,null,2);
				}
			}
			
		}
	}, false);
}

/**
 * 删除函数
 * @param url 删除的url
 * @param id 数据id，可为空
 * @param confirmText confirm的提示值，可为空
 * @param judge 删除表单的时候需要根据状态判断是否可用删除
 * @returns
 */
function deleteData(url,id,confirmText,judge) {
	var canContinue = true;
	if(!id)
	{
		var selectnum = $("input[name='checkBoxData']:checked").length;
		if (selectnum == 0) {
			//showNotice('删除提示','请选中你所需要删除的记录','face-sad',false,null,null,2);
			art.dialog.alert("请选中你所需要删除的记录");
			return null;
		}
		var check = $("input[name='checkBoxData']:checked");
		var selectvals = "";
		var htmlvals = "";
		check.each(function(i) {
			if(judge)
			{
				var flowStatus = $(this).attr("title");
				if("create"!=flowStatus)
				{
					canContinue = false;
					return false;
				}
			}
			if (selectvals == "") {
				selectvals = $(this).val();
			} else {
				selectvals = selectvals + ':' + $(this).val();
			}
		});
		id = selectvals;
	}
	if(!canContinue)
	{
		art.dialog.alert("只能删除已创建的表单");
		return null;
	}
	var confirmValue = '确定要删除数据吗？';
	if(confirmText)
	{
		confirmValue = confirmText;
	}
	art.dialog.confirm(confirmValue, function () {
		//点击“确定”后执行的函数
		$.ajax({
			type : "GET",
			url : url,
			data : {
				"id" : id
			},
			success : function(data) {
				if(data && data.length>1)
				{
					if(data[0]=="0")
					{
						//showNotice('删除数据成功',data[1],'succeed',true,null,null,3);
						art.dialog.alert("删除数据成功",function(){window.location.href = window.location.href;});
						//window.location.href = window.location.href;
					}
					else
					{
						//showNotice('删除数据失败',data[1],'face-sad',false,null,null,3);
						art.dialog.alert("删除数据失败");
					}
				}
			},
			error : function(data) {
				if(data && data.length>1)
				{
					if(data[0]=="0")
					{
						//showNotice('删除数据成功',data[1],'succeed',true,null,null,3);
						art.dialog.alert("删除数据成功",function(){window.location.href = window.location.href;});
						//window.location.href = window.location.href;
					}
					else
					{
						//showNotice('删除数据失败',data[1],'face-sad',false,null,null,3);
						art.dialog.alert("删除数据失败");
					}
				}
			}
		});
	}, function () {
		//点击“取消”后执行的函数
	    //art.dialog.tips('执行取消操作');
	});
}

//打开菜单树页面选择菜单——单选
/**
 * currentId：当前元素的id值
 * url：打开页面的url
 */
function menuSelect(currentId,url){
	//var url = "${ctx}/sys/menu/treeselect?url="+encodeURIComponent("/sys/area/treeData")+"";//+"?module=&checked=true&extId=&nodesLevel=3";
	art.dialog.open(url, {
		id : 'selectIcon',
		title : '选择树节点[双击选择]',
		width : '350px',
		height : '400px',
		lock : true,
		opacity : 0.5,// 透明度  
		close : function() {
			var returnObj = art.dialog.data("returnTree");
			if(returnObj)
			{
				//$("#menuSelectId").val(returnObj[0]);
				$("#"+currentId).prev().attr("value",returnObj[0]);
				$("#"+currentId).attr("value",returnObj[1]);
				//val.value=returnObj[1];
			}
		}
	}, false);
}

/**
 * 初始化xheditor
 * @param id 需要初始化为xheditor的textarea的id值
 * @param tools 初始化的形式，如：full
 * @param html5Upload 是否支持html5上传
 * @param upMultiple 一次最大上传数目
 * @param upLinkUrl 附件上传的url
 * @param upLinkExt 附件的格式
 * @param upImgUrl 图片的上传url
 * @param upImgExt 图片的格式
 */
function initXHEditor(id,tools,html5Upload,upMultiple,upLinkUrl,upLinkExt,upImgUrl,upImgExt){
	if(!tools){tools="full";}
	if(!html5Upload){html5Upload=true;}
	if(!upMultiple){upMultiple=4;}
	if(!upLinkUrl){upLinkUrl="${ctx}/upload/upload";}
	if(!upLinkExt){upLinkExt="zip,rar,txt,doc,docx,xls,xlsx";}
	if(!upImgUrl){upImgUrl="${ctx}/upload/upload";}
	if(!upImgExt){upImgExt="jpg,jpeg,gif,png";}
	$('#'+id).xheditor({
		tools : tools,
		html5Upload : html5Upload,
		upMultiple : upMultiple,
		upLinkUrl : upLinkUrl,
		upLinkExt : upLinkExt,
		upImgUrl : upImgUrl,
		upImgExt : upImgExt
	});
}

/**
 * initFormElement('input[type="text"],[type="password"],select,textarea');
 * 初始化表单元素的样式，如input、select、textarea
 * @param elements
 */
function initFormElement(elements){
	$(elements).addClass("idleField");
	$(elements).focus(function() {
		$(this).removeClass("idleField").addClass("focusField");
	});
	$(elements).blur(function() {
		$(this).removeClass("focusField").addClass("idleField");
	});
}

/**
 * 上传附件的时候添加一行input-file
 */
function addInputFile(id){
	var fileName = Math.floor(Math.random() * ( 1000 + 1));
	var vals = 
	"<div style='padding: 6px 0 0 0;'>"+
		"<input type='file' name='"+fileName+"' onchange='fileChange(this,20);' /> &nbsp;&nbsp;&nbsp;&nbsp;"+ 
    	"<input type='button' value='删除' class='commons_button' style='padding: 2px 10px 3px 10px;' onclick='removeInputFile(this)'/> "+  
	"</div>";
	$("#"+id).append(vals);
}

/**
 * 上传附件的时候删除一行input-file
 */
function removeInputFile(obj){
	art.dialog.confirm('确定要删除数据吗？', function () {
		$(obj).parent().remove();
	}, function () {
		//点击“取消”后执行的函数
	    //art.dialog.tips('执行取消操作');
	});
	
}

/**
 * 上传附件的时候删除一行input-file
 */
function ajaxRemoveInputFile(obj){
	art.dialog.confirm('确定要删除数据吗？', function () {
		//点击“确定”后执行的函数
		var tempdelFileName = $("#delFileName").val();
	   	var currdelFileName = $(obj).attr("name");
	   	if(tempdelFileName==""){
	   	   $("#delFileName").val(currdelFileName);
	   	}else{
	   	   $("#delFileName").val(tempdelFileName+":"+currdelFileName);
	   	}
		$(obj).parent().remove();
	}, function () {
		//点击“取消”后执行的函数
	    //art.dialog.tips('执行取消操作');
	});	
}

/**
 * ajax上传附件
 * @param target input对象
 * @param maxSize 附件的最大值，单位：m
 * @param fileType 附件类型
 */
function ajaxFileUploadFun(url,target, maxSize, fileType,saveOrNot)
{
	//alert($("#attachNo").val());
	var fileName = target.value;
	var fileTypeArray;
	if(fileType)
	{
		fileTypeArray = fileType.split(",");
	}
	else
	{
		fileTypeArray = new Array(".gif", ".jpg", ".png",".jpeg",".zip",".rar",".txt",".doc",".docx",".xls",".xlsx",".pdf");
	}
	if(LimitAttach(fileName,fileTypeArray) && fileChange(target, maxSize))
	{
		$.ajaxFileUpload
		({
			url:url,
			secureuri:false,//是否启用安全提交,默认为false
			fileElementId:'myfile',//文件选择框的id属性
			data:{attachNo: $("#attachNo").val(),saveOrNot:saveOrNot},//除了file外的其他参数
			dataType: 'json',//服务器返回的格式,可以是json、text或xml等
			success: function (data)//服务器响应成功时的处理函数
			{
				var returnVal = eval(data); 
				var vals = 
					"<div style='padding: 6px 0 0 0;'>"+
						"<span style='display:inline;'>"+returnVal.fileName+"</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+ 
				    	"<input type='button' value='删除' class='commons_button' style='padding: 2px 10px 3px 10px;' name='"+returnVal.id+"' value='删除' onclick='ajaxRemoveInputFile(this)'/>"+  
					"</div>";
				$("#uploadFilesAjax").append(vals);
			},
			error: function (data)
			{
				art.dialog.alert("上传发生异常");
			}
		});
	}
}


/**
 * ajax上传附件，只上传图片
 * @param target input对象
 * @param maxSize 附件的最大值，单位：m
 * @param fileType 附件类型
 */
function ajaxFileUploadImg(url,target, maxSize, fileType,saveOrNot,imgId,inputId)
{
	var fileName = target.value;
	var fileTypeArray;
	if(fileType)
	{
		fileTypeArray = fileType.split(",");
	}
	else
	{
		fileTypeArray = new Array(".gif", ".jpg", ".png",".jpeg");
	}
	if(LimitAttach(fileName,fileTypeArray) && fileChange(target, maxSize))
	{
		$.ajaxFileUpload
		({
			url:url,
			secureuri:false,//是否启用安全提交,默认为false
			fileElementId:'myfile',//文件选择框的id属性
			data:{attachNo: '${attachNo}',saveOrNot:saveOrNot},//除了file外的其他参数
			dataType: 'json',//服务器返回的格式,可以是json、text或xml等
			success: function (data)//服务器响应成功时的处理函数
			{
				var returnVal = eval(data); 
				$("#"+imgId).attr("src",returnVal.filePath);
				$("#"+inputId).attr("value",returnVal.filePath);
			},
			error: function (data)
			{
				art.dialog.alert("上传发生异常");
			}
		});
	}
}


/**
 * 选择附件后对附件大小进行判断
 * @param target 
 * @param maxSize
 * @returns
 */
function fileChange(target, maxSize) {
    var fileSize = 0;
    var isIE = /msie/i.test(navigator.userAgent) && !window.opera;
    if (isIE && !target.files) {
        var filePath = target.value;
        var fileSystem = new ActiveXObject("Scripting.FileSystemObject");
        if (!fileSystem.FileExists(filePath)) {
            //var file = document.getElementById(id);
            target.outerHTML = target.outerHTML;
            return fasle;
        }
        var file = fileSystem.GetFile(filePath);
        fileSize = file.Size;
    } else {
        fileSize = target.files[0].size;
    }
    var size = fileSize / (1024 * 1024);
    if (size > maxSize) {
        art.dialog.alert("附件大小不能大于"+maxSize+"M！");
        //var file = document.getElementById(id);
        target.outerHTML = target.outerHTML;
        return false;
    }
    if (size <= 0) {
    	art.dialog.alert("附件大小不能为0M！");
        //var file = document.getElementById(id);
        target.outerHTML = target.outerHTML
        return false;
    }
    return true;
}


/**
 * 验证附件的后缀
 * @param file 附件的名称
 * @param extArray 可上传的附件类型
 * @returns {Boolean} 返回true或false
 */
function LimitAttach(file, extArray) 
{
	if (!file) 
	{
		return false;
	}
	while (file.indexOf("\\") != -1)
	{
		file = file.slice(file.indexOf("\\") + 1);
	}
	var pos = file.lastIndexOf(".");
	var ext = file.substring(pos,file.length).toLowerCase();  //此处文件后缀名也可用数组方式获得str.split(".") 
	//ext = file.slice(file.indexOf(".")).toLowerCase();
	for (var i = 0; i < extArray.length; i++) {
		if (extArray[i] == ext) 
		{ 
			return true; 
		}
	}
	art.dialog.alert("您上传的文件类型为 "+ext+" ，只能上传:  " + (extArray.join("  ")) + "，请重新选择文件再上传。");
	return false;
}

function fileType(str, fileType){
	 var pos = str.lastIndexOf(".");
	 var lastname = str.substring(pos,str.length)  //此处文件后缀名也可用数组方式获得str.split(".") 
	 var caseName = lastname.toLowerCase();
	 if (caseName!=".jpg" && caseName!=".gif")
	 {
	     alert("您上传的文件类型为"+lastname+"，图片必须为.jpg,.gif类型");
	     return false;
	 }
	 else 
	 {
		 alert("success") ; 
		 return true;
	 }
}


/**
 * 用于自定义标签文件(.tag)中引入js和css文件
 * @param id id值，随便给，主要为了不重复引入？？
 * @param path 附件的路径，就.css或.js的父目录
 * @param file .css或.js文件
 */
function include(id, path, file){
	if (document.getElementById(id)==null){
        var files = typeof file == "string" ? [file] : file;
        for (var i = 0; i < files.length; i++){
            var name = files[i].replace(/^\s|\s$/g, "");
            var att = name.split('.');
            var ext = att[att.length - 1].toLowerCase();
            var isCSS = ext == "css";
            var tag = isCSS ? "link" : "script";
            var attr = isCSS ? " type='text/css' rel='stylesheet' " : " type='text/javascript' ";
            var link = (isCSS ? "href" : "src") + "='" + path + name + "'";
            document.write("<" + tag + (i==0?" id="+id:"") + attr + link + "></" + tag + ">");
        }
	}
}


/**
 * 给作为控制的checkbox绑定click函数
 * @param checkboxSwitchParent 作为控制的checkbox的父元素的选择器名字，
 * @param checkboxSwitch 作为控制的checkbox的选择器名字
 * @param checkboxContent 作为实际内容的checkbox的父元素的选择器名字，
 */
function icheckContentBindClick(checkboxSwitchParent,checkboxSwitch,checkboxContent){
	$(checkboxSwitchParent+"#checkboxSwitchParent ins:first").bind("click",function(e){
		var selectedVal = $(checkboxSwitch).attr("checked");
		var check = $(checkboxContent+" ins");
		check.each(function(i) {//i从0开始
			//已选中的行
			var prev = $(this).prev();
			var prevVal = prev.attr("checked");
			if (selectedVal != prevVal) {
				$(this).click();
			}
		});       	
	});
}

/**
 * 初始化此选择器下的所有checkbox，格式：#allCheckClass、.allCheckClass，allCheckClass不是固定的单词
 * @param allCheckClass 初始化此选择器下的所有checkbox
 */
function icheckMineInit(allCheckClass)
{
	var callbacks_list = $(allCheckClass+' ul');
    $(allCheckClass+' input[type="checkbox"],input[type="radio"]').on('ifCreated ifClicked ifChanged ifChecked ifUnchecked ifDisabled ifEnabled ifDestroyed', function(event){
      callbacks_list.prepend('<div><span>#' + this.id + '</span> is ' + event.type.replace('if', '').toLowerCase() + '</div>');
    }).iCheck({
      checkboxClass: 'icheckbox_square-blue',
      radioClass: 'iradio_square-blue',
      increaseArea: '20%'
    });
}

/**
 * 初始化此选择器下的所有checkbox，格式：#allCheckClass、.allCheckClass，allCheckClass不是固定的单词
 * @param allCheckClass 初始化此选择器下的所有checkbox
 */
function icheckMineInitCheckBox(allCheckClass)
{
	var callbacks_list = $(allCheckClass+' ul');
    $(allCheckClass+' input[type="checkbox"]').on('ifCreated ifClicked ifChanged ifChecked ifUnchecked ifDisabled ifEnabled ifDestroyed', function(event){
      callbacks_list.prepend('<div><span>#' + this.id + '</span> is ' + event.type.replace('if', '').toLowerCase() + '</div>');
    }).iCheck({
      checkboxClass: 'icheckbox_square-blue',
      increaseArea: '20%'
    });
}

/**
 * 初始化此选择器下的所有Radio，格式：#allCheckClass、.allCheckClass，allCheckClass不是固定的单词
 * @param allCheckClass 初始化此选择器下的所有checkbox
 */
function icheckMineInitRadio(allCheckClass)
{
	var callbacks_list = $(allCheckClass+' ul');
    $(allCheckClass+' input[type="radio"]').on('ifCreated ifClicked ifChanged ifChecked ifUnchecked ifDisabled ifEnabled ifDestroyed', function(event){
      callbacks_list.prepend('<div><span>#' + this.id + '</span> is ' + event.type.replace('if', '').toLowerCase() + '</div>');
    }).iCheck({
      radioClass: 'iradio_square-blue',
      increaseArea: '20%'
    });
}

/**
 * 选择列表数据前面的复选框
 * @param id 复选框的id
 */
function selectCheckICheck(id){
	$("#"+id).next().click();
}

/**
 * 根据传过来的id值清空对应输入框或文本域的值
 * arguments:其实吧，原理很简单，就是在函数里面，有一个arguments这个是ＪＳ引擎自带的，
 * 使用这个可以接收到所以传入到函数里面的参数，然后对这个arguments遍历就可以获得他们的和了，其实很简单。
 */
function resetSelectedVal(){
	for(var i=0; i<arguments.length; i++){  
        $("#"+arguments[i]+"").val("");  
    }
}

/**
 * 根据传过来的表单id值清空对应输入框或文本域的值
 */
function resetByFormId(formId){
	$("#"+formId+" input[type='text'],[type='password'],[type='hidden'],select").val("");
	//jQuery中没有innerText、innerHtml，用html
	$("#"+formId+" textarea").html("");
}

//--------------------resize---------------------
if(!Array.prototype.map)
	Array.prototype.map = function(fn,scope) {
	var result = [],ri = 0;
	for (var i = 0,n = this.length; i < n; i++){
	  if(i in this){
	    result[ri++]  = fn.call(scope ,this[i],i,this);
	  }
	}
	return result;
};
/**
 * 获取窗口宽度和高度
 */
var getWindowSize = function(){
	if(navigator.userAgent.indexOf('MSIE') >= 0) {
		//得到页面高度 
		var yScroll = (document.documentElement.scrollHeight >document.documentElement.clientHeight) ? document.documentElement.scrollHeight : document.documentElement.clientHeight; 
		//得到页面宽度 
		var xScroll=(document.documentElement.scrollWidth>document.documentElement.clientWidth) ? document.documentElement.scrollWidth : document.documentElement.scrollWidth; 
		return new Array(yScroll,xScroll);
	}
	else
	{
		return ["Height","Width"].map(function(name){
	    	  return window["inner"+name] ||
	    		document.compatMode === "CSS1Compat" && document.documentElement[ "client" + name ] || document.body[ "client" + name ];
	    	});
	}
};

//--------------------resize---------------------
//校验输入框的值，并弹出第一个验证不通过的数据项的提示
function checkInput(){
	//var errors = $(".error").eq(0).parent().prev().text();
	//var errors = $(".error").eq(0).parent().html();
	var errors = $(".error");//.eq(0).css("display")
	if(errors && errors.length>0)
	{
		for(var i=0;i<errors.length;i++)
		{
			var display = $(errors[i]).css("display");
			if("none" != display)
			{
				var err = $(errors[i]).parent().prev().text();
				if(!err || ""==err)
				{
					err = $(errors[i]).parent().parent().prev().text();
				}
				var unPassId = $(errors[i]).parent().find("label").last().attr("for");
				alert("【  "+err.substring(1)+"  】校验不通过，请检查。");
				$("#"+unPassId).focus();
				break;
			}
		}
	}
}

var theme = "blue";

//邮件审批完了发送邮件
function sendEmail(url,recordId){
	alert();
	var loading = lockAndLoading("数据保存中，请稍等....");
	//art.dialog.alert("发送邮件功能开发中，敬请期待....");
	//要去重复——去后台才去重复吧
	var participateIds = "";
	var participateNames = "";
	$("input[name='participates']:checked").each(function(){
		participateIds+=$(this).val()+";";
	});
	participateIds+=$("#otherParticipateIds").val();
	//alert(participateIds);
	$.ajax({
        type: "GET",
        url: url,
        data: {recordId:recordId,userIdList:participateIds},
        dataType: "json",
        success: function(data){
        	loading.close();
        	if(data && data.length>0 && data[0]!="-1")
	    	{
		    	if(data[2])
		    	{
		    		alert(data[2]);
		    	}
		    	else
		    	{
		    		alert("邮件已成功申请发送.");
		    	}
	    	}
		    else
	    	{
		    	if(data[2])
		    	{
		    		alert(data[2]);
		    	}
		    	else
		    	{
		    		alert("邮件发送失败，请重新发送！");
		    	}
	    	}
        }
    }); 
}


/**
 * 自动补全插件
 * @param url ：请求路径
 * @param targetId 用户隐藏域的id
 * @param targetName 用户输入框的id
 * @param divId 显示查询出来的下拉div的id
 * @param ifmany 是否多选，多选的时候，选择的值显示在输入框上方
 * @param manyDivId 多选的时候，选择的值显示在输入框上方的div的id
 */
function initAutoComplete(url,targetId,targetName,divId,ifmany,manyDivId){
	//=============开始============
	var highlightindex2 = -1;//高亮表示
	var timeoutId2;//延迟加载
	//$("#"+targetName).focus();
		
	//得到文本框对象  
	var wordInput2 = $("#"+targetName);  
	var idAndNames2 = "";      
	//得到文本框距离屏幕左边距和上边的距离  
	var wordInputOffset2 = wordInput2.offset();  
	  
	//自动补全框最开始隐藏起来  
	//添加样式必须现价 css("position","absolute")属性  
	$("#"+divId).hide().css("border", "1px gray solid").css("position", "absolute").css("top", "1px").css("left", "0px");  
	  
	//给文本框添加键盘按下并弹起的事件  
	$("#"+targetName).keyup(function (event) {  
	    //处理文本框中的键盘事件  
	    //得到弹出框对象  
	    var autoNode = $("#"+divId);  
	    //得到当前按键的code值  
	    var myEvent = event || window.evnet;  
	    var keyCode = myEvent.keyCode;  
	      
	    //如果输入的是字母，应该将文本框最新的信息发送给服务器  
	    //如果输入的是退格键或删除键，也应该将文本框的信息发送给服务器  
	   if (keyCode!=13&&keyCode!=38&&keyCode!=40&&(keyCode >= 65 || keyCode <= 90 || keyCode == 8 || keyCode == 46)) {  
	        //1、首先获取文本框的内容  
	        var wordText = $("#"+targetName).val();
	        //文本内容不为空才将文本框内容发给服务器  
	        if (wordText != "") {  
	            //2、将文本框的内容发给服务器  
	            //对上次未执行的延时做清除操作  
	            clearTimeout(timeoutId2);  
	            //对服务器端进行交互延迟500ms,避免快速打字造成的频繁请求  
	            timeoutId2 = setTimeout(function(){  
	            $.ajax({
	            type: "POST",
	            dataType: "json",
	            url: url,
	            data: {"userName":wordText},
	            success: function(json) {
	                //将dom对象data转换成JQuery的对象  
	                //var jqueryobj = $(data);  
	                //找到所有word节点  
	                //var wordNodes = jqueryobj.find("word");  
	                //console.log(json);
	                var typeData = json;
	                //遍历所有的word节点，取出单词内容，然后将单词内容添加到弹出框中  
	                //清空div里原来的内容  
	                autoNode.html("");  
	                $.each(typeData, function(i, n){  
	                    //获取单词  
	                    var wordNode = n.name+"("+n.companyName+"-"+n.officeName+")";  
	                    var userId = n.id;
	                    idAndNames2+=userId+"≡"+wordNode+",";
	                    //新建div节点,将单词内容加入到新建的节点中  
	                    //将新建的节点加入到弹出框的节点中  
	                    var newDivNode = $("<div style='height:25px;line-height:25px;width:345px; cursor:pointer;padding-left:5px;font-weight:bold;font-size:11px;'>").attr("id",i);  
	                    newDivNode.html(wordNode).appendTo(autoNode);  
	                    //添加鼠标进入事件,高亮节点  
	                    newDivNode.mouseover(function(){  
	                        //将原来高亮的节点取消  
	                        if(highlightindex2 != -1){  
	                            $("#"+divId).children("div").eq(highlightindex2).css("background-color","white");  
	                        }  
	                        //记录新的高亮节点  
	                        highlightindex2 =  $(this).attr("id");  
	                        $(this).css("background-color","#6FC0FF");  
	                    });  
	                    //鼠标移出，取消高亮  
	                    newDivNode.mouseout(function(){  
	                        //取消节点的高亮  
	                        $(this).css("background-color","white");  
	                    });  
	                   
	                    //鼠标补全  
	                    newDivNode.click(function(){ 
	                    	event=event||window.event;  
	                        event.stopPropagation(); 
	                    	if(ifmany)
	                    	{
	                    		var ifAdded = checkRepeat("manySelectDiv",n.id);
	        	        		if(!ifAdded)
	        	        		{
	        	        			alert("此数据已经添加，不能再次添加.");
	        	        			$("#"+targetName).val(""); 
	        	        			return false;
	        	        		}
	        	        		var selectedVal = $(this).text();
	        	        		var newName = deleteCompany(selectedVal);
	                    		var oneUserDiv = "<div class=\"justForManyChoose\" id=\""+n.id+"\">"+newName+"<a href=\"javascript:void(0);\" style='text-decoration:none;' onclick=\"removeOneDiv('"+n.id+"')\">&nbsp;&nbsp;<img src='../../theme/blue/images/t03.png' width='13' height='12'></a></div>";
	                    		$("#"+manyDivId).append(oneUserDiv);
	                    		//隐藏弹出窗体  
		                        $("#"+divId).hide();
		                        $("#"+targetName).val(""); 
	                    	}
	                    	else
	                    	{
	                    		var selectedVal = $(this).text();
	        	        		var newName = deleteCompany(selectedVal);
	                    		//文本框的内容变成高亮显示的内容  
		                        $("#"+targetName).val(newName);  
		                        $("#"+targetId).val(n.id); 
		                        //隐藏弹出窗体  
		                        $("#"+divId).hide();
	                    	}
	                    });  
	                    //失去焦点时让弹出框隐藏
	                    $("#t1").click(function(){                                              
	                        //隐藏弹出窗体  
	                        $("#"+divId).hide();  
	                    });
	                });  
	                //如果服务服务器端有数据,则显示弹出框  
	                if (typeData && typeData.length > 0) {  
	                    autoNode.show(); 
	                   // $("#"+divId).focus();
	                } else {  
	                    autoNode.hide();  
	                      
	                    //弹出框隐藏时没有高亮显示的节点  
	                    highlightindex2 = -1;  
	                }  
	                
	            }
	            
	            });  
	            },500);   
	        } else {  
	            autoNode.hide();  
	            //弹出框隐藏时没有高亮显示的节点  
	            highlightindex2 = -1;  
	        }  
	    } else if(keyCode == 38) {      //向上键             
	        //得到弹出框的所有子节点  
	        var autoNodes = $("#"+divId).children("div");  
	        if(highlightindex2 != -1){  
	            //如果原来存在高亮显示节点，则将背景色改为白色  
	            autoNodes.eq(highlightindex2).css("background-color","white");  
	            //将highlightindex2等于零的情况单独拿出来处理  
	            if(highlightindex2 == 0){  
	                highlightindex2 = autoNodes.length - 1;  
	            }else{  
	                highlightindex2--;  
	            }             
	        }else{  
	            highlightindex2 = autoNodes.length - 1;  
	        }  
	        //让现在高亮的内容变成红色  
	        autoNodes.eq(highlightindex2).css("background-color","#6FC0FF");  
	    }else if(keyCode == 40){    //向下键         
	        //得到弹出框的所有子节点  
	        var autoNodes = $("#"+divId).children("div");  
	        if(highlightindex2 != -1){  
	            //如果原来存在高亮显示节点，则将背景色改为白色  
	            autoNodes.eq(highlightindex2).css("background-color","white");                 
	        }     
	        highlightindex2++;     
	          
	        if(highlightindex2 == autoNodes.length){  
	            highlightindex2 = 0;  
	        }  
	        //让现在高亮的内容变成红色  
	        autoNodes.eq(highlightindex2).css("background-color","#6FC0FF");  
	    }else if (keyCode == 13) {  
	        //如果输入的是回车  
	        if(highlightindex2 != -1){  
	            //取出高亮显示下拉框的内容  
	            var comText = $("#"+divId).hide().children("div").eq(highlightindex2).text(); 
	            
	            if(ifmany)
            	{
	            	var selectedId;
	            	if(idAndNames2.indexOf(',')!=-1){
		                idAndNames2 = idAndNames2.substring(0,idAndNames2.length-1);
		                var newids= idAndNames2.split(",");
		                for(i=0;i<newids.length;i++){
		                //alert(newids[i]);
		                     var idName= newids[i].split("≡");
		                     if(idName[1]==comText){
		                    	 selectedId = idName[0];
		                             break;
		                     }
		                }
		            }
	            	var ifAdded = checkRepeat("manySelectDiv",selectedId);
	        		if(!ifAdded)
	        		{
	        			alert("此数据已经添加，不能再次添加.");
	        			$("#"+targetName).val(""); 
	        			return false;
	        		}
	        		var newName = deleteCompany(comText);
            		var oneUserDiv = "<div class=\"justForManyChoose\" id=\""+selectedId+"\">"+newName+"<a href=\"javascript:void(0);\" style='text-decoration:none;' onclick=\"removeOneDiv('"+selectedId+"')\">&nbsp;&nbsp;<img src='../../theme/blue/images/t03.png' width='13' height='12'></a></div>";
            		$("#"+manyDivId).append(oneUserDiv);
            		//隐藏弹出窗体  
                    $("#"+divId).hide();
                    $("#"+targetName).val(""); 
            	}
            	else
            	{
            		var newName = deleteCompany(comText);
		            //文本框的内容变成高亮显示的内容  
		            $("#"+targetName).val(newName);  
		            //console.log(idAndNames2);
		            //获取id
		            if(idAndNames2.indexOf(',')!=-1){
		                idAndNames2 = idAndNames2.substring(0,idAndNames2.length-1);
		                var newids= idAndNames2.split(",");
		                for(i=0;i<newids.length;i++){
		                //alert(newids[i]);
		                     var idName= newids[i].split("≡");
		                     if(idName[1]==comText){
		                         $("#"+targetId).val(idName[0]);
		                             break;
		                     }
		                }
		            }
		            highlightindex2 = -1; 
            	}
	        }else{  
	        	if(ifmany)
            	{
	        		var ifAdded = checkRepeat("manySelectDiv",$("#"+targetId).val());
	        		if(!ifAdded)
	        		{
	        			alert("此数据已经添加，不能再次添加.");
	        			$("#"+targetName).val(""); 
	        			return false;
	        		}
	        		var selectedVal = $("#"+targetName).val();
	        		var newName = deleteCompany(selectedVal)
            		var oneUserDiv = "<div class=\"justForManyChoose\" id=\""+$("#"+targetId).val()+"\">"+newName+"<a href=\"javascript:void(0);\" style='text-decoration:none;' onclick=\"removeOneDiv('"+$("#"+targetId).val()+"')\">&nbsp;&nbsp;<img src='../../theme/blue/images/t03.png' width='13' height='12'></a></div>";
            		$("#"+manyDivId).append(oneUserDiv);
            		//隐藏弹出窗体  
                    $("#"+divId).hide();
                    $("#"+targetName).val(""); 
            	}
            	else
            	{
            		var selectedVal = $("#"+targetName).val();
	        		var newName = deleteCompany(selectedVal)
		        	var wordText = newName;
			        var wordTextId = $("#"+targetId).val();
            	}
		        if(wordText&&wordTextId)
		        {
		        	submitForm();
		        	return;
		        }
	            var obj = $("#"+targetName);  
	            var count = obj.val();  
	            obj.val("");
	            //alert("文本框中的[" + count + "]被提交了");  
	              
	            //让文本框失去焦点  
	            obj.get(0).blur();  
	            
		        
	        }             
	    }  
	});  
} 

/**
 * 自动补全插件
 * @param url ：请求路径
 * @param targetId 用户隐藏域的id
 * @param targetName 用户输入框的id
 * @param divId 显示查询出来的下拉div的id
 * @param ifmany 是否多选，多选的时候，选择的值显示在输入框上方
 * @param manyDivId 多选的时候，选择的值显示在输入框上方的div的id
 */
function initCustomerAutoComplete(url,targetId,targetName,divId,ifmany,manyDivId){
	//=============开始============
	var highlightindex2 = -1;//高亮表示
	var timeoutId2;//延迟加载
	//$("#"+targetName).focus();
		
	//得到文本框对象  
	var wordInput2 = $("#"+targetName);  
	var idAndNames2 = "";      
	//得到文本框距离屏幕左边距和上边的距离  
	var wordInputOffset2 = wordInput2.offset();  
	  
	//自动补全框最开始隐藏起来  
	//添加样式必须现价 css("position","absolute")属性  
	$("#"+divId).hide().css("border", "1px gray solid").css("position", "absolute").css("top", "1px").css("left", "0px");  
	  
	//给文本框添加键盘按下并弹起的事件  
	$("#"+targetName).keyup(function (event) {  
	    //处理文本框中的键盘事件  
	    //得到弹出框对象  
	    var autoNode = $("#"+divId);  
	    //得到当前按键的code值  
	    var myEvent = event || window.evnet;  
	    var keyCode = myEvent.keyCode;  
	      
	    //如果输入的是字母，应该将文本框最新的信息发送给服务器  
	    //如果输入的是退格键或删除键，也应该将文本框的信息发送给服务器  
	   if (keyCode!=13&&keyCode!=38&&keyCode!=40&&(keyCode >= 65 || keyCode <= 90 || keyCode == 8 || keyCode == 46)) {  
	        //1、首先获取文本框的内容  
	        var wordText = $("#"+targetName).val();
	        //文本内容不为空才将文本框内容发给服务器  
	        if (wordText != "") {  
	            //2、将文本框的内容发给服务器  
	            //对上次未执行的延时做清除操作  
	            clearTimeout(timeoutId2);  
	            //对服务器端进行交互延迟500ms,避免快速打字造成的频繁请求  
	            timeoutId2 = setTimeout(function(){  
	            $.ajax({
	            type: "POST",
	            dataType: "json",
	            url: url,
	            data: {"customerName":wordText},
	            success: function(json) {
	                //将dom对象data转换成JQuery的对象  
	                //var jqueryobj = $(data);  
	                //找到所有word节点  
	                //var wordNodes = jqueryobj.find("word");  
	                //console.log(json);
	                var typeData = json;
	                //遍历所有的word节点，取出单词内容，然后将单词内容添加到弹出框中  
	                //清空div里原来的内容  
	                autoNode.html("");  
	                $.each(typeData, function(i, n){  
	                    //获取单词  
	                    var wordNode = n.customerName+"("+n.customerNumber+")";  
	                    var userId = n.customerNumber;
	                    idAndNames2+=userId+"≡"+wordNode+",";
	                    //新建div节点,将单词内容加入到新建的节点中  
	                    //将新建的节点加入到弹出框的节点中  
	                    var newDivNode = $("<div style='height:25px;line-height:25px;width:345px; cursor:pointer;padding-left:5px;font-weight:bold;font-size:11px;'>").attr("id",i);  
	                    newDivNode.html(wordNode).appendTo(autoNode);  
	                    //添加鼠标进入事件,高亮节点  
	                    newDivNode.mouseover(function(){  
	                        //将原来高亮的节点取消  
	                        if(highlightindex2 != -1){  
	                            $("#"+divId).children("div").eq(highlightindex2).css("background-color","white");  
	                        }  
	                        //记录新的高亮节点  
	                        highlightindex2 =  $(this).attr("id");  
	                        $(this).css("background-color","#6FC0FF");  
	                    });  
	                    //鼠标移出，取消高亮  
	                    newDivNode.mouseout(function(){  
	                        //取消节点的高亮  
	                        $(this).css("background-color","white");  
	                    });  
	                   
	                    //鼠标补全  
	                    newDivNode.click(function(){ 
	                    	event=event||window.event;  
	                        event.stopPropagation(); 
	                    	if(ifmany)
	                    	{
	                    		var ifAdded = checkRepeat("manySelectDiv",n.id);
	        	        		if(!ifAdded)
	        	        		{
	        	        			alert("此数据已经添加，不能再次添加.");
	        	        			$("#"+targetName).val(""); 
	        	        			return false;
	        	        		}
	        	        		var selectedVal = $(this).text();
	        	        		var newName = deleteCompany(selectedVal);
	                    		var oneUserDiv = "<div class=\"justForManyChoose\" id=\""+n.id+"\">"+newName+"<a href=\"javascript:void(0);\" style='text-decoration:none;' onclick=\"removeOneDiv('"+n.id+"')\">&nbsp;&nbsp;<img src='../../theme/blue/images/t03.png' width='13' height='12'></a></div>";
	                    		$("#"+manyDivId).append(oneUserDiv);
	                    		//隐藏弹出窗体  
		                        $("#"+divId).hide();
		                        $("#"+targetName).val(""); 
	                    	}
	                    	else
	                    	{
	                    		var selectedVal = $(this).text();
	        	        		var newName = deleteCompany(selectedVal);
	                    		//文本框的内容变成高亮显示的内容  
		                        $("#"+targetName).val(newName);  
		                        $("#"+targetId).val(n.customerNumber); 
		                        //隐藏弹出窗体  
		                        $("#"+divId).hide();
	                    	}
	                    });  
	                    //失去焦点时让弹出框隐藏
	                    $("#t1").click(function(){                                              
	                        //隐藏弹出窗体  
	                        $("#"+divId).hide();  
	                    });
	                });  
	                //如果服务服务器端有数据,则显示弹出框  
	                if (typeData && typeData.length > 0) {  
	                    autoNode.show(); 
	                   // $("#"+divId).focus();
	                } else {  
	                    autoNode.hide();  
	                      
	                    //弹出框隐藏时没有高亮显示的节点  
	                    highlightindex2 = -1;  
	                }  
	                
	            }
	            
	            });  
	            },500);   
	        } else {  
	            autoNode.hide();  
	            //弹出框隐藏时没有高亮显示的节点  
	            highlightindex2 = -1;  
	        }  
	    } else if(keyCode == 38) {      //向上键             
	        //得到弹出框的所有子节点  
	        var autoNodes = $("#"+divId).children("div");  
	        if(highlightindex2 != -1){  
	            //如果原来存在高亮显示节点，则将背景色改为白色  
	            autoNodes.eq(highlightindex2).css("background-color","white");  
	            //将highlightindex2等于零的情况单独拿出来处理  
	            if(highlightindex2 == 0){  
	                highlightindex2 = autoNodes.length - 1;  
	            }else{  
	                highlightindex2--;  
	            }             
	        }else{  
	            highlightindex2 = autoNodes.length - 1;  
	        }  
	        //让现在高亮的内容变成红色  
	        autoNodes.eq(highlightindex2).css("background-color","#6FC0FF");  
	    }else if(keyCode == 40){    //向下键         
	        //得到弹出框的所有子节点  
	        var autoNodes = $("#"+divId).children("div");  
	        if(highlightindex2 != -1){  
	            //如果原来存在高亮显示节点，则将背景色改为白色  
	            autoNodes.eq(highlightindex2).css("background-color","white");                 
	        }     
	        highlightindex2++;     
	          
	        if(highlightindex2 == autoNodes.length){  
	            highlightindex2 = 0;  
	        }  
	        //让现在高亮的内容变成红色  
	        autoNodes.eq(highlightindex2).css("background-color","#6FC0FF");  
	    }else if (keyCode == 13) {  
	        //如果输入的是回车  
	        if(highlightindex2 != -1){  
	            //取出高亮显示下拉框的内容  
	            var comText = $("#"+divId).hide().children("div").eq(highlightindex2).text(); 
	            
	            if(ifmany)
            	{
	            	var selectedId;
	            	if(idAndNames2.indexOf(',')!=-1){
		                idAndNames2 = idAndNames2.substring(0,idAndNames2.length-1);
		                var newids= idAndNames2.split(",");
		                for(i=0;i<newids.length;i++){
		                //alert(newids[i]);
		                     var idName= newids[i].split("≡");
		                     if(idName[1]==comText){
		                    	 selectedId = idName[0];
		                             break;
		                     }
		                }
		            }
	            	var ifAdded = checkRepeat("manySelectDiv",selectedId);
	        		if(!ifAdded)
	        		{
	        			alert("此数据已经添加，不能再次添加.");
	        			$("#"+targetName).val(""); 
	        			return false;
	        		}
	        		var newName = deleteCompany(comText);
            		var oneUserDiv = "<div class=\"justForManyChoose\" id=\""+selectedId+"\">"+newName+"<a href=\"javascript:void(0);\" style='text-decoration:none;' onclick=\"removeOneDiv('"+selectedId+"')\">&nbsp;&nbsp;<img src='../../theme/blue/images/t03.png' width='13' height='12'></a></div>";
            		$("#"+manyDivId).append(oneUserDiv);
            		//隐藏弹出窗体  
                    $("#"+divId).hide();
                    $("#"+targetName).val(""); 
            	}
            	else
            	{
            		var newName = deleteCompany(comText);
		            //文本框的内容变成高亮显示的内容  
		            $("#"+targetName).val(newName);  
		            //console.log(idAndNames2);
		            //获取id
		            if(idAndNames2.indexOf(',')!=-1){
		                idAndNames2 = idAndNames2.substring(0,idAndNames2.length-1);
		                var newids= idAndNames2.split(",");
		                for(i=0;i<newids.length;i++){
		                //alert(newids[i]);
		                     var idName= newids[i].split("≡");
		                     if(idName[1]==comText){
		                         $("#"+targetId).val(idName[0]);
		                             break;
		                     }
		                }
		            }
		            highlightindex2 = -1; 
            	}
	        }else{  
	        	if(ifmany)
            	{
	        		var ifAdded = checkRepeat("manySelectDiv",$("#"+targetId).val());
	        		if(!ifAdded)
	        		{
	        			alert("此数据已经添加，不能再次添加.");
	        			$("#"+targetName).val(""); 
	        			return false;
	        		}
	        		var selectedVal = $("#"+targetName).val();
	        		var newName = deleteCompany(selectedVal)
            		var oneUserDiv = "<div class=\"justForManyChoose\" id=\""+$("#"+targetId).val()+"\">"+newName+"<a href=\"javascript:void(0);\" style='text-decoration:none;' onclick=\"removeOneDiv('"+$("#"+targetId).val()+"')\">&nbsp;&nbsp;<img src='../../theme/blue/images/t03.png' width='13' height='12'></a></div>";
            		$("#"+manyDivId).append(oneUserDiv);
            		//隐藏弹出窗体  
                    $("#"+divId).hide();
                    $("#"+targetName).val(""); 
            	}
            	else
            	{
            		var selectedVal = $("#"+targetName).val();
	        		var newName = deleteCompany(selectedVal)
		        	var wordText = newName;
			        var wordTextId = $("#"+targetId).val();
            	}
		        if(wordText&&wordTextId)
		        {
		        	submitForm();
		        	return;
		        }
	            var obj = $("#"+targetName);  
	            var count = obj.val();  
	            obj.val("");
	            //alert("文本框中的[" + count + "]被提交了");  
	              
	            //让文本框失去焦点  
	            obj.get(0).blur();  
	            
		        
	        }             
	    }  
	});  
} 

function hideDiv(divId){
	$("#"+divId).hide();
}


function removeOneDiv(id)
{
	var confirmValue = "确定删除数据吗？";
	art.dialog.confirm(confirmValue, function () {
	$("#"+id).remove();
	});
}

/* str是目标字符串 
reallyDo是替换谁 
replaceWith是替换成什么。  */
function del_html_tags(str,reallyDo,replaceWith) { 
	var e=new RegExp(reallyDo,"g"); 
	words = str.replace(e, replaceWith); 
	return words; 
} 

function checkRepeat(parentId,id){
	var getdiv = $("#"+id);
	var getparentId = $("#"+id).parent().attr("id");
	if(getdiv && parentId==getparentId)
	{
		return false;
	}
	return true;
}


function deleteCompany(userName)
{
	if(userName.indexOf("(")>-1)
	{
		return userName.substring(0,userName.indexOf("("));
	}
	else if(userName.indexOf("（")>-1)
	{
		return userName.substring(0,userName.indexOf("（"));
	}
	else
	{
		return userName;
	}
}

function setDataToInput(valueDiv,inputId,inputNmae){
	var ids = "";
	var names = "";
	var divs = $("#"+valueDiv).children();
	//console.log(divs);
	if(divs && divs.length>0)
	{
		for(var i=0;i<divs.length;i++)
		{
			ids+=","+$(divs[i]).attr("id");
			var currName = $(divs[i]).text()
			currName = deleteCompany(currName);
			names+=","+currName;
		}
	}
	else
	{
		return;
	}
	if(ids.length>1)
	{
		ids = ids.substring(1);
	}
	if(names.length>1)
	{
		names = names.substring(1);
	}
	names=del_html_tags(names,"删除","");
	$("#"+inputId).val(ids);
	$("#"+inputNmae).val(names);
	//alert("many:"+ids+"---"+names);
}

/**
 * 页面初始化好后做两件事：
 * 1、重新定义数据列的宽度；
 * 2、初始化右键菜单
 */
function resizeWidthAndInitMenu(columnWidth){
	if(columnWidth)
	{
		var json = JSON.parse(columnWidth); 
		for(var k in json) {
		    //遍历对象，k即为key，obj[k]为当前k对应的值
			//console.log(k+"-----"+json[k]);
		    $(".bodyTdTwo_"+k).css("width",json[k]+"px");
		} 
	}
	$(".headTdTwo").contextMenu({
		menuId: 'contextMenu',
		onContextMenuItemSelected:function(menuItemId, $triggerElement){
			//alert('trigger2'+menuItemId+' '+$triggerElement.attr('id'))
		},
		onContextMenuShow:function($triggerElement){
			//alert('trigger2'+$triggerElement.attr('id'))
		}
		//$(".headTdTwo").disableContextMenuItems(['delete'])  //屏蔽某个菜单项
		//$("#trigger2").enableContextMenuItems(['delete']) //解除某个菜单项的屏蔽
	});
}

/**
 * 在表头右键选中要展示的数据列
 * @param refreshUrl 当前列表页面的路径
 * @param tableName 当前列表页面对应的table名称
 * @param ctx 项目根路径
 */
function chooseColumns(refreshUrl,tableName,ctx)
{
	var random = randomString(20);
	//art.dialog.data("returnObj","");用于传值到打开的页面，如果不传值则不需要。还有一个作用，每次打开的时候清空上次打开的时候回传的值
	art.dialog.data("returnValue","");
	var url = ctx+"/sys/userTableColumn/openDetail?resource=fromFront&tableName="+tableName;
	art.dialog.open(url, {
		id : random,
		title : '数据列明细',
		width : '850px',
		height : '520px',
		lock : true,
		opacity : 0.1,// 透明度  
		close : function() {
			var returnObj = art.dialog.data("returnValue");
			//console.log(returnObj);
			if(returnObj)
			{
				window.location.href=refreshUrl+"&sortedColumnsZh="+returnObj[0]+"&sortedColumnsEn="+returnObj[1]+"&showType="+returnObj[2]+"&columnsWidth="+returnObj[3];
			}
		}
	}, false);
}

/**
 * 表头固定的时候控制右边主要内容页面的整体高度和宽度
 * @param mainPageExcludeHight 主页面查询段和分页段加起来的高度，默认250
 */
function resizeTable(mainPageExcludeHight){
	if(!mainPageExcludeHight)
	{
		mainPageExcludeHight = 250;
	}
	var tableWidth = $("#table_head").css("width");
	var strs = getWindowSize().toString().split(",");
	var tableHieht = strs[0]-mainPageExcludeHight;
	$("#scrollDiv").css("width",tableWidth).css("height",tableHieht+"px").css("overflow-y","auto").css("overflow-x","hidden");
}

function resizeTablePersonal(widthArr,nameArr,headDivClassName,bodyDivClassName){
	if(widthArr)
	{
		var j=0;
		for(var i=0;i<widthArr.length;i++)
		{
			var column = $("."+bodyDivClassName+"_"+nameArr[i]).length;
			if(column)
			{
				//console.log(i+"-"+column+"-"+bodyDivClassName+"-"+nameArr[i]);
				$("#"+headDivClassName+"_"+j).css("width",widthArr[i]+"px");
				$("."+bodyDivClassName+"_"+nameArr[i]).css("width",widthArr[i]+"px");
				j++;
			}
		}
	}
}