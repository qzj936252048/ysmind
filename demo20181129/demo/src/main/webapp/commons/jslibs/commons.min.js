$(function () {
	//全选  
	$('#allParticipates').on('ifChecked', function(event){  
		var name = $(this).attr("name");
		$("input[title='"+name+"_pt']").iCheck('check');  
	});  
	//反选  
	$('#allParticipates').on('ifUnchecked', function(event){ 
		var name = $(this).attr("name");
		$("input[title='"+name+"_pt']").iCheck('uncheck');  
	}); 
})
function getNowFormatTime(date) {
	if(!date)
	{
		date = new Date();
	}
    var seperator1 = "-";
    var seperator2 = ":";
    var month = date.getMonth() + 1;
    var strDate = date.getDate();
    if (month >= 1 && month <= 9) {
        month = "0" + month;
    }
    if (strDate >= 0 && strDate <= 9) {
        strDate = "0" + strDate;
    }
    var currentdate = date.getFullYear() + seperator1 + month + seperator1 + strDate
            + " " + date.getHours() + seperator2 + date.getMinutes()
            + seperator2 + date.getSeconds();
    return currentdate;
} 

function getNowFormatDate(date) {
	if(!date)
	{
		date = new Date();
	}
    var seperator1 = "-";
    var seperator2 = ":";
    var month = date.getMonth() + 1;
    var strDate = date.getDate();
    if (month >= 1 && month <= 9) {
        month = "0" + month;
    }
    if (strDate >= 0 && strDate <= 9) {
        strDate = "0" + strDate;
    }
    var currentdate = date.getFullYear() + seperator1 + month + seperator1 + strDate;
    return currentdate;
} 

/**
 * 初始化此选择器下的所有checkbox，格式：#allCheckClass、.allCheckClass，allCheckClass不是固定的单词
 * @param allCheckClass 初始化此选择器下的所有checkbox
 */
function icheckMineInit(allCheckClass)
{
    $(allCheckClass+' input[type="checkbox"],input[type="radio"]').iCheck({
      checkboxClass: 'icheckbox_minimal-blue',
      radioClass: 'iradio_minimal-blue',
      increaseArea: '20%'
    });
}

/**
 * 根据传过来的表单id值清空对应输入框或文本域的值
 */
function resetByFormId(formId){
	$("#"+formId+" input[type='text'],[type='password'],[type='hidden'],select").val("");
	//jQuery中没有innerText、innerHtml，用html
	$("#"+formId+" textarea").html("");
}

/**
 * 页面初始化好后做两件事：
 * 1、重新定义数据列的宽度；
 * 2、初始化右键菜单
 */
function resizeWidthAndInitMenu(columnWidth){
	if(columnWidth)
	{
		var json = JSON.parse(columnWidth); 
		for(var k in json) {
		    //遍历对象，k即为key，obj[k]为当前k对应的值
		    $(".bodyTdTwo_"+k).css("width",json[k]+"px");
		} 
	}
	$(".headTdTwo").contextMenu({
		menuId: 'contextMenu',
		onContextMenuItemSelected:function(menuItemId, $triggerElement){
			//alert('trigger2'+menuItemId+' '+$triggerElement.attr('id'))
		},
		onContextMenuShow:function($triggerElement){
			//alert('trigger2'+$triggerElement.attr('id'))
		}
		//$(".headTdTwo").disableContextMenuItems(['delete'])  //屏蔽某个菜单项
		//$("#trigger2").enableContextMenuItems(['delete']) //解除某个菜单项的屏蔽
	});
}

/**
 * 在表头右键选中要展示的数据列
 * @param refreshUrl 当前列表页面的路径
 * @param tableName 当前列表页面对应的table名称
 * @param ctx 项目根路径
 */
function chooseColumns(refreshUrl,tableName,ctx)
{
	var random = randomString(20);
	//art.dialog.data("returnObj","");用于传值到打开的页面，如果不传值则不需要。还有一个作用，每次打开的时候清空上次打开的时候回传的值
	art.dialog.data("returnValue","");
	var url = ctx+"/sys/userTableColumn/openDetail?resource=fromFront&tableName="+tableName;
	art.dialog.open(url, {
		id : random,
		title : '数据列明细',
		width : '850px',
		height : '520px',
		lock : true,
		opacity : 0.1,// 透明度  
		close : function() {
			var returnObj = art.dialog.data("returnValue");
			if(returnObj)
			{
				window.location.href=refreshUrl+"&sortedColumnsZh="+returnObj[0]+"&sortedColumnsEn="+returnObj[1]+"&showType="+returnObj[2]+"&columnsWidth="+returnObj[3];
			}
		}
	}, false);
}

/**
 * 表头固定的时候控制右边主要内容页面的整体高度和宽度
 * @param mainPageExcludeHight 主页面查询段和分页段加起来的高度，默认250
 */
function resizeTable(mainPageExcludeHight){
	if(!mainPageExcludeHight)
	{
		mainPageExcludeHight = 250;
	}
	var tableWidth = $("#table_head").css("width");
	var strs = getWindowSize().toString().split(",");
	var tableHieht = strs[0]-mainPageExcludeHight;
	$("#scrollDiv").css("width",tableWidth).css("height",tableHieht+"px").css("overflow-y","auto").css("overflow-x","hidden");
}

function resizeTablePersonal(widthArr,nameArr,headDivClassName,bodyDivClassName){
	if(widthArr)
	{
		var j=0;
		for(var i=0;i<widthArr.length;i++)
		{
			var column = $("."+bodyDivClassName+"_"+nameArr[i]).length;
			if(column)
			{
				$("#"+headDivClassName+"_"+j).css("width",widthArr[i]+"px");
				$("."+bodyDivClassName+"_"+nameArr[i]).css("width",widthArr[i]+"px");
				j++;
			}
		}
	}
}

/**
 * 获取窗口宽度和高度
 */
var getWindowSize = function(){
	if(navigator.userAgent.indexOf('MSIE') >= 0) {
		//得到页面高度 
		var yScroll = (document.documentElement.scrollHeight >document.documentElement.clientHeight) ? document.documentElement.scrollHeight : document.documentElement.clientHeight; 
		//得到页面宽度 
		var xScroll=(document.documentElement.scrollWidth>document.documentElement.clientWidth) ? document.documentElement.scrollWidth : document.documentElement.scrollWidth; 
		return new Array(yScroll,xScroll);
	}
	else
	{
		return ["Height","Width"].map(function(name){
	    	  return window["inner"+name] ||
	    		document.compatMode === "CSS1Compat" && document.documentElement[ "client" + name ] || document.body[ "client" + name ];
	    	});
	}
};


/**
 * ajax请求统一提示
 * @param data 返回数据:["0","保存失败"]、["1","保存成功"]
 * @param isArtDialog 是否用artDialog提示
 * @param defaultTips 默认的提示语
 */
function commonAjaxAlert(data,isArtDialog,defaultTips)
{
	if(data && data.length>0)
	{
		if(isArtDialog)
		{
			art.dialog.alert(data[1]);
		}
		else
		{
			alert(data[1]);
		}
	}
	else
	{
		if(isArtDialog)
		{
			art.dialog.alert(defaultTips);
		}
		else
		{
			alert(defaultTips);
		}
	}
}

function commonAjax(url,data,requestType,loadingTips)
{
	if(!loadingTips){loadingTips = "数据保存中，请稍等...."}
	var loading = lockAndLoading(loadingTips);
	$.ajax({
	    type: requestType,
	    url: url,
	    data: data,
	    dataType: "json",
	    success: function(data){
	    	loading.close();
	    	commonAjaxAlert(data,true,"保存异常，请确认是否已经保存成功")
	    },
	    error:function(data){
	    	loading.close();
	    	commonAjaxAlert(data,true,"保存异常，请确认是否已经保存成功")
	    }
	});
}

//class为tablelist的表格隔行换色
//$('.tablelist tbody tr:odd').addClass('odd');
//获取焦点整行换色
/*$("#alternatecolor tr").live({  
    mouseover:function(){  
        $(this).css("background-color","#eeeeee");  
    },  
    mouseout:function(){  
        $(this).css("background-color","#ffffff");  
    }  
})*/

/**
 * 每个列表页的分页函数
 * @param n
 * @param s
 * @returns {Boolean}
 */
function page(n,s){
	//因为高级查询导致每个列表页有两个查询表单，所以加queryWay进行区分
	var queryWay = $("#queryWay").val();
	//alert(queryWay);
	if(!queryWay)
	{
		queryWay = "_normal";
	}
	//alert(queryWay);
	$("#pageNo"+queryWay).val(n);
	$("#pageSize"+queryWay).val(s);
	$("#searchForm"+queryWay).submit();
	return false;
}

/**
 * 列表的选中与去选
 * @param dictId id值
 */
function selectCheck(dictId){
	var va = document.getElementById(dictId);
	if(va)
	{
		if(va.checked==true)
		{
			va.checked=false;
		}else{
			va.checked=true
		}
	}
}

/**
 * 全选与全去选函数
 * @param val 当前点击的对象
 */
function selectAll(val){
	var selectedVal = val.value;
	if(!val.checked)
	{
		$("input[name="+selectedVal+"]:checked").attr("checked",false);
	}
	else
	{
		$("input[name="+selectedVal+"]").attr("checked",true);
	}
}

/**
 * 在右下角弹出提示选择数据的提示框
 * @param title
 * @param content
 * @param icon
 * @param reloadornot
 * @param widths
 * @param heights
 * @param times
 */
function showNotice(title,content,icon,reloadornot,widths,heights,times){
	if(reloadornot==null || reloadornot=="undefined"){reloadornot=true;}
	if(content==null || content == ""){reloadornot=false;}
	if(!widths){widths="220";}
	if(!heights){heights="100";}
	if(!times){times=5;}
	art.dialog.notice({  
	    title: title,  
	    width: widths,
	    height:heights,
	    content: content,  
	    icon: icon,//error、face-sad、face-smile、question、succeed、warning、
	    time: times//多少秒后消失
	},reloadornot); 
}

/**
 * 根据长度生成随机数
 * @param len
 * @returns {String}
 */
function randomString(len) {
	　　len = len || 20;
	　　var $chars = 'abcdefhijkmnprstwxyz2345678';    /****默认去掉了容易混淆的字符oOLl,9gq,Vv,Uu,I1****/
	　　var maxPos = $chars.length;
	　　var pwd = '';
	　　for (i = 0; i < len; i++) {
	　　　　pwd += $chars.charAt(Math.floor(Math.random() * maxPos));
	　　}
	　　return pwd;
}

function randomString(len,normalId) {
	   len = len - 1;
	　　len = len || 20;
	　　var $chars = 'abcdefhijkmnprstwxyz2345678oOLl9gqVvUuI1';    /****默认去掉了容易混淆的字符oOLl,9gq,Vv,Uu,I1****/
	　　var maxPos = $chars.length;
	   //因为Java属性名不可以以数字开头，所以这里加个a
	　　var pwd = 'a';
	　　for (i = 0; i < len; i++) {
	　　　　pwd += $chars.charAt(Math.floor(Math.random() * maxPos));
	　　}
		if(normalId)
	   {
			pwd = normalId+pwd;
	   }
	　　return pwd;
}

function checkAllInput(varValue,textLength,showTips){
	if(varValue && ""!=varValue){
		if(varValue.length>textLength)
		{
			alert(showTips+"长度过长，最大长度为："+textLength);
			return "inputTextTooLong";
		}
		/* varValue =  del_html_tags(varValue,"'","︵");
		varValue =  del_html_tags(varValue,"\"","︶"); */
		return varValue;
	}
	return "";
}

/**
 * str是目标字符串 
 * reallyDo是替换谁 
 * replaceWith是替换成什么。 
 */
function del_html_tags(str,reallyDo,replaceWith) { 
	var e=new RegExp(reallyDo,"g"); 
	words = str.replace(e, replaceWith); 
	return words; 
} 

/**
 * textarea自动拉升
 */
$.fn.autoHeight = function(){
	function autoHeight(elem){
		elem.style.height = 'auto';
		elem.scrollTop = 0; //防抖动
		elem.style.height = elem.scrollHeight + 'px';
	}
	this.each(function(){
		autoHeight(this);
		$(this).on('keyup', function(){
			autoHeight(this);
		});
	});
}
//$('textarea[autoHeight]').autoHeight();

/**
 * 
 */
function openWindowAndSelect(url,inputId,inputName){
	var unionId = randomString(20);
	art.dialog.data("returnObj","");
	art.dialog.open(url, {
		id : unionId,
		title : '选择数据',
		width : '1100px',
		height : '615px',
		lock : true,
		opacity : 0.1,// 透明度  
		close : function() {
			var returnObj = art.dialog.data("returnObj");
			if(returnObj!="")
			{
				$("#"+inputId).val(returnObj[0]);
				$("#"+inputName).val(returnObj[1]);
			}
		}
	}, false);
}

function selectFromOpenPage(url,inputId,inputName,flowElementId){
	if(flowElementId && ""!=flowElementId)
	{
		var flowId = $("#"+flowElementId).val();
		if(!flowId)
		{
			art.dialog.alert("流程id为空");
			return;
		}
		else
		{
			if(url.indexOf("?")>-1)
			{
				url = url+"&workflow.id="+flowId
			}
			else
			{
				url = url+"?workflow.id="+flowId
			}
		}
	}
	var unionId = randomString(20);
	art.dialog.data("returnObj","");
	art.dialog.open(url, {
		id : unionId,
		title : '选择数据',
		width : '1100px',
		height : '615px',
		lock : true,
		opacity : 0.1,// 透明度  
		close : function() {
			var returnObj = art.dialog.data("returnObj");
			if(returnObj!="")
			{
				$("#"+inputId).val(returnObj[0]);
				$("#"+inputName).val(returnObj[1]);
			}
		}
	}, false);
}

/**
 * 根据流程id查询节点列表拼接到节点select框中
 * @param url ： 查询URL
 * @param flowId ：获取流程id的元素id
 * @param nodeId ： 获取到节点后拼接到的元素id
 * @param selectedNode ： 选中的节点的value
 */
function selectWorkflowNodeByFlowId(url,flowId,nodeId,selectedNode){
	var flowId = $("#"+flowId).val();
	if(flowId)
	{
		$.ajax({
	        type: "GET",
	        url: url,
	        data: {flowId:flowId},
	        dataType: "json",
	        success: function(data){
	            $('#'+nodeId).empty();   //清空resText里面的所有内容
	            for(var i=0;i<data.length;i++){   
		           	$("#"+nodeId).append("<option value='"+data[i].id+"'>"+data[i].name+"</option>");
	            }  
	            //$("#selectNode").css("display","");
	            $("#"+nodeId).find("option[value='"+selectedNode+"']").attr("selected",true);
	        }
	    });
	}
	else
	{
		art.dialog.alert("流程id为空");
	}
}

/**
 * 
 * @param url
 * @param inputId
 * @param inputName
 * @param priorities
 */
function selectCondition(url,inputId,inputName,priorities){
	var unionId = randomString(20);
	art.dialog.data("returnObj","");//用于传值到打开的页面，如果不传值则不需要。还有一个作用，每次打开的时候清空上次打开的时候回传的值
	//var url = "${ctx}/wf/workflowCondition/listForChoose";
	art.dialog.open(url, {
		id : unionId,
		title : '选择條件',
		width : '1200px',
		height : '615px',
		lock : true,
		opacity : 0.1,// 透明度  
		close : function() {
			var returnValue = art.dialog.data("returnObj");
			if(returnValue && returnValue.length>0 && returnValue!="")
			{
				$("#"+inputId).val(returnValue[0]);
				$("#"+inputName).val(returnValue[1]);
				if(priorities)
				$("#"+priorities).val(returnValue[2]);
				
			}
			else if(returnValue && returnValue.length>0 && returnValue[0]=="-1")
			{
				$("#"+inputId).val("");
				$("#"+inputName).val("");
				if(priorities)
				$("#"+priorities).val("");
			}
		}
	}, false);
}

//选择用户
function chooseUser(url,inputUserId,inputUserName,topjuiId){
	art.dialog.data("returnValue","");
	art.dialog.open(url, {
		id : 'chooseUser',
		title : '选择用户',
		width : '900px',
		height : '615px',
		lock : true,
		opacity : 0.1,// 透明度  
		close : function() {
			var returnValue = art.dialog.data("returnValue");
			if(returnValue!="" && returnValue.length>0)
			{
				if(topjuiId)
				{
					//$("#"+topjuiId).val(returnValue[1]);
					$("#"+topjuiId).combobox('setValue',returnValue[1]);  
				}
				$("#"+inputUserId).val(returnValue[0]);
				$("#"+inputUserName).val(returnValue[1]);
				
			}
		}
	}, false);
}

//选择用户——自动补全功能多选时用
/**
 * 自动补全插件
 * @param url ：请求路径
 * @param targetId 用户隐藏域的id
 * @param targetName 用户输入框的id
 * @param divId 显示查询出来的下拉div的id
 * @param ifmany 是否多选，多选的时候，选择的值显示在输入框上方
 * @param manyDivId 多选的时候，选择的值显示在输入框上方的div的id
 * @param needCompayName 名称后面是否需要拼接公司名称
 */
//function initAutoComplete(url,targetId,targetName,divId,ifmany,manyDivId){
function chooseUserForAutoComplete(url,targetName,divId,manyDivId,needCompayName){
	art.dialog.data("returnValue","");
	art.dialog.open(url, {
		id : 'chooseUser',
		title : '选择用户',
		width : '900px',
		height : '615px',
		lock : true,
		opacity : 0.1,// 透明度  
		close : function() {
			var returnValue = art.dialog.data("returnValue");
			if(returnValue!="" && returnValue.length>0)
			{
				///$("#"+inputUserId).val(returnValue[0]);
				//$("#"+inputUserName).val(returnValue[1]);
				//-1表示选择空
				if(returnValue[0]!="-1")
				{
					var userIdArr = returnValue[0].split(",");
					var userNameArr = returnValue[1].split(",");
					var companyNameArr = returnValue[2].split(",");
					for(var i=0;i<userIdArr.length;i++)
					{
						var selectedId = userIdArr[i];
						var selectedName = userNameArr[i];
						if(needCompayName && "yes"==needCompayName)
						{
							selectedName+="("+companyNameArr[i]+")";
						}
						var ifAdded = checkRepeat("manySelectDiv",selectedId);
		        		if(ifAdded)
		        		{
		            		var oneUserDiv = "<div class=\"justForManyChoose\" id=\""+selectedId+"\">"+selectedName+"<a href=\"javascript:void(0);\" style='text-decoration:none;' onclick=\"removeOneDiv('"+selectedId+"')\">&nbsp;&nbsp;<img src='./../../commons/images/t03.png' width='13' height='12'></a></div>";
		            		$("#"+manyDivId).append(oneUserDiv);
		            		//隐藏弹出窗体  
		                    $("#"+divId).hide();
		                    $("#"+targetName).val("");
		        		}
					}
				}
			}
		}
	}, false);
}

//选中公司、部门——单选
function companySelect(urlPre,urlReal,inputUserId,inputUserName){
	var url = urlPre+"?url="+encodeURIComponent(urlReal);
	//var url = "${ctx}/sys/menu/treeselect?url="+encodeURIComponent("/sys/office/treeData?type=1");//+"&module=&checked=true&extId=${office.id}&nodesLevel=3";
	art.dialog.open(url, {
		id : 'selectIcon',
		title : '选择树节点[双击选择]',
		width : '350px',
		height : '45%',
		lock : true,
		opacity : 0.1,// 透明度  
		close : function() {
			var returnObj = art.dialog.data("returnTree");
			if(returnObj)
			{
				$("#"+inputUserId).val(returnObj[0]);
				$("#"+inputUserName).val(returnObj[1]);
			}
		}
	}, false);
}

/**
 * 关闭art.dialog弹出的窗口
 */
function closePage(){
	art.dialog.data("returnObj","");
	art.dialog.close();
}

/**
 * 锁屏显示加载中，关闭用loadingDialog.close();
 * @param val 显示的文字，类似loading...
 * @returns
 */
function lockAndLoading(val)
{
	var loadingDialog = window.parent.art.dialog({
	    title: null,
	    background:'#E7EDF2',
	    content: "<div class='aui_loading_mine'><span style='padding-left:40px;padding-top:7px;font-size:13px;'>"+val+"</span></div>",
	    icon: null,
	    cancel:false,
	    lock:true,
	    width:'auto'
	});
	return loadingDialog;
}

/**
 * 公用打开添加页面函数
 * @param url 打开页面的url
 * @param title 添加页面的标题
 * @param widths 添加页面的宽度
 * @param heights 添加页面的高度
 * @param lock 是否锁屏
 * @param reload 关闭提示框后是否刷新父页面
 * @returns 
 */
function addData(url,title,widths,heights,lock,resize,reload){
	art.dialog.data("returnObj","");//用于传值到打开的页面，如果不传值则不需要。还有一个作用，每次打开的时候清空上次打开的时候回传的值
	var windowId = Math.floor(Math.random() * ( 100000 + 1));
	if(!title || title == ""){title="新增数据";}
	if(!widths){widths="730px";}
	if(!heights){heights="65%";}
	if(lock==null || lock == ""){lock=true;}//是否锁屏
	if(resize==null || resize == ""){resize=true;}//是否调整弹出窗口大小
	art.dialog.open(url, {
		id : windowId,
		title : title,
		width : widths,
		height : heights,
		lock : lock,
		opacity : 0.1,// 透明度  
		resize : resize,
		close : function() {
			var returnObj = art.dialog.data("returnObj");
			if(returnObj!="")
			{
				if(returnObj[0]=="0")
				{
					if(reload)
					{
						art.dialog.alert("新增数据成功",function(){window.location.href = window.location.href;});
					}
					else
					{
						art.dialog.alert("新增数据成功");
					}
					//showNotice('新增数据成功',returnObj[1],'succeed',true,null,null,2);
				}
				else
				{
					art.dialog.alert("新增数据失败");
					//showNotice('新增数据失败',returnObj[1],'face-sad',false,null,null,2);
				}
			}
		}
	}, false);
}

/**
 * 公用打开编辑页面函数
 * @param url 打开页面的url
 * @param id id可传可不传，不传则根据记录前面所选复选框选中的记录作为要修改的记录
 * @param title 编辑页面的标题
 * @param widths 编辑页面的宽度
 * @param heights 编辑页面的高度
 * @param lock 是否锁屏
 * @returns 
 */
function copyData(url,id,title,widths,heights,lock,resize) {
	art.dialog.data("returnObj","");//用于传值到打开的页面，如果不传值则不需要。还有一个作用，每次打开的时候清空上次打开的时候回传的值
	var windowId = Math.floor(Math.random() * ( 100000 + 1));
	if(!title || title == ""){title="修改数据";}
	if(!widths){widths="730px";}
	if(!heights){heights="65%";}
	if(lock==null || lock == ""){lock=true;}
	if(resize==null || resize == ""){resize=true;}//是否调整弹出窗口大小
	if(!id)
	{
		var selectnum = $("input[name='checkBoxData']:checked").length;
		if (selectnum == 0) {
			art.dialog.alert("请选中你所需要操作的记录");
			return null;
		} else if (selectnum > 1) {
			art.dialog.alert("当前操作只能选择一条记录");
			return null;
		}
		id = $("input[name='checkBoxData']:checked")[0].value;
	}
	url = url+"?copy=copy&id="+ id;
	art.dialog.open(url, {
		id : windowId,
		title : title,
		width : widths,
		height : heights,
		lock : lock,
		opacity : 0.1,
		resize : resize,
		close : function() {
			var returnObj = art.dialog.data("returnObj");
			//art.dialog.alert(returnObj);
			if(returnObj!="")
			{
				if(returnObj[0]=="0")
				{
					art.dialog.alert("修改数据成功");
					//showNotice('修改数据成功',returnObj[1],'succeed',true,null,null,2);
				}
				else
				{
					art.dialog.alert("修改数据成功");
					//showNotice('修改数据失败',returnObj[1],'face-sad',false,null,null,2);
				}
			}
			
		}
	}, false);
}

/**
 * 公用打开编辑页面函数
 * @param url 打开页面的url
 * @param id id可传可不传，不传则根据记录前面所选复选框选中的记录作为要修改的记录
 * @param title 编辑页面的标题
 * @param widths 编辑页面的宽度
 * @param heights 编辑页面的高度
 * @param lock 是否锁屏
 * @returns 
 */
function editData(url,id,title,widths,heights,lock,resize) {
	art.dialog.data("returnObj","");//用于传值到打开的页面，如果不传值则不需要。还有一个作用，每次打开的时候清空上次打开的时候回传的值
	var windowId = Math.floor(Math.random() * ( 100000 + 1));
	if(!title || title == ""){title="修改数据";}
	if(!widths){widths="730px";}
	if(!heights){heights="65%";}
	if(lock==null || lock == ""){lock=true;}
	if(resize==null || resize == ""){resize=true;}//是否调整弹出窗口大小
	if(!id)
	{
		var selectnum = $("input[name='checkBoxData']:checked").length;
		if (selectnum == 0) {
			art.dialog.alert("请选中你所需要操作的记录");
			return null;
		} else if (selectnum > 1) {
			art.dialog.alert("当前操作只能选择一条记录");
			return null;
		}
		id = $("input[name='checkBoxData']:checked")[0].value;
	}
	var win = art.dialog.open.origin;    
	
	url = url+"?id="+ id;
	art.dialog.open(url, {
		id : windowId,
		title : title,
		width : widths,
		height : heights,
		lock : lock,
		opacity : 0.1,
		resize : resize,
		close : function() {
			var returnObj = art.dialog.data("returnObj");
			//art.dialog.alert(returnObj);
			if(returnObj!="")
			{
				if(returnObj[0]=="0")
				{
					art.dialog.alert("修改数据成功",function(){win.location.reload();});
					//showNotice('修改数据成功',returnObj[1],'succeed',true,null,null,2);
				}
				else
				{
					art.dialog.alert("修改数据失败");
					//showNotice('修改数据失败',returnObj[1],'face-sad',false,null,null,2);
				}
				
			}
			
		}
	}, true);
}

/**
 * 删除函数
 * @param url 删除的url
 * @param id 数据id，可为空
 * @param confirmText confirm的提示值，可为空
 * @param judge 删除表单的时候需要根据状态判断是否可用删除
 * @returns
 */
function deleteData(url,id,confirmText,judge) {
	var canContinue = true;
	if(!id)
	{
		var selectnum = $("input[name='checkBoxData']:checked").length;
		if (selectnum == 0) {
			//showNotice('删除提示','请选中你所需要删除的记录','face-sad',false,null,null,2);
			art.dialog.alert("请选中你所需要删除的记录");
			return null;
		}
		var check = $("input[name='checkBoxData']:checked");
		var selectvals = "";
		var htmlvals = "";
		check.each(function(i) {
			if(judge)
			{
				var flowStatus = $(this).attr("title");
				if("create"!=flowStatus)
				{
					canContinue = false;
					return false;
				}
			}
			if (selectvals == "") {
				selectvals = $(this).val();
			} else {
				selectvals = selectvals + ':' + $(this).val();
			}
		});
		id = selectvals;
	}
	if(!canContinue)
	{
		art.dialog.alert("只能删除已创建的数据");
		return null;
	}
	var confirmValue = '确定要删除数据吗？';
	if(confirmText)
	{
		confirmValue = confirmText;
	}
	art.dialog.confirm(confirmValue, function () {
		//点击“确定”后执行的函数
		$.ajax({
			type : "GET",
			url : url,
			data : {
				"id" : id
			},
			success : function(data) {
				if(data && data.length>1)
				{
					if(data[0]=="0")
					{
						//showNotice('删除数据成功',data[1],'succeed',true,null,null,3);
						art.dialog.alert("删除数据成功",function(){window.location.href = window.location.href;});
						//window.location.href = window.location.href;
					}
					else
					{
						//showNotice('删除数据失败',data[1],'face-sad',false,null,null,3);
						art.dialog.alert("删除数据失败");
					}
				}
			},
			error : function(data) {
				if(data && data.length>1)
				{
					if(data[0]=="0")
					{
						//showNotice('删除数据成功',data[1],'succeed',true,null,null,3);
						art.dialog.alert("删除数据成功",function(){window.location.href = window.location.href;});
						//window.location.href = window.location.href;
					}
					else
					{
						//showNotice('删除数据失败',data[1],'face-sad',false,null,null,3);
						art.dialog.alert("删除数据失败");
					}
				}
			}
		});
	}, function () {
		//点击“取消”后执行的函数
	    //art.dialog.tips('执行取消操作');
	});
}







//--------------------------附件start-----------------------------

/**
 * 上传附件的时候添加一行input-file
 */
function addInputFile(id){
	var fileName = Math.floor(Math.random() * ( 1000 + 1));
	var vals = 
	"<div style='padding: 6px 0 0 0;'>"+
		"<input type='file' name='"+fileName+"' onchange='fileChange(this,20);' /> &nbsp;&nbsp;&nbsp;&nbsp;"+ 
    	"<input type='button' value='删除' class='commons_button' style='padding: 2px 10px 3px 10px;' onclick='removeInputFile(this)'/> "+  
	"</div>";
	$("#"+id).append(vals);
}

/**
 * 上传附件的时候删除一行input-file
 */
function removeInputFile(obj){
	art.dialog.confirm('确定要删除数据吗？', function () {
		$(obj).parent().remove();
	}, function () {
		//点击“取消”后执行的函数
	    //art.dialog.tips('执行取消操作');
	});
	
}

/**
 * 上传附件的时候删除一行input-file
 */
function ajaxRemoveInputFile(obj){
	art.dialog.confirm('确定要删除数据吗？', function () {
		//点击“确定”后执行的函数
		var tempdelFileName = $("#delFileName").val();
	   	var currdelFileName = $(obj).attr("name");
	   	if(tempdelFileName==""){
	   	   $("#delFileName").val(currdelFileName);
	   	}else{
	   	   $("#delFileName").val(tempdelFileName+":"+currdelFileName);
	   	}
		$(obj).parent().remove();
	}, function () {
		//点击“取消”后执行的函数
	    //art.dialog.tips('执行取消操作');
	});	
}



function ajaxRemoveInputFileEasyui(obj){
	art.dialog.confirm('确定要删除数据吗？', function () {
		//点击“确定”后执行的函数
		var tempdelFileName = $("#delFileName").val();
	   	var currdelFileName = $(obj).attr("name");
	   	if(tempdelFileName==""){
	   	   $("#delFileName").val(currdelFileName);
	   	}else{
	   	   $("#delFileName").val(tempdelFileName+":"+currdelFileName);
	   	}
		$(obj).parent().parent().remove();
	}, function () {
		//点击“取消”后执行的函数
	    //art.dialog.tips('执行取消操作');
	});	
}
//定时器对象
var uploadProcessTimer = null;

//获取文件上传进度
function getFileUploadProcess(random) {
	$.get('/sample/getFileProcessServlet', function(data) {
		$.parser.parse();
		if(0==data)
		{
			data = 100;
		}
		$('#'+random+"_bar").progressbar('setValue', data); 
		//EasyUi  进度条组件ProgressBar 根据实时进度更改进度条颜色。>=30%为绿，>=70为黄，>70%为红，可以应用率监控系统CPU、内存使用绿，通过进度及颜色表示当前系统资源使用率。
		/*$('#p').progressbar('setValue', value);  
        if(data<=30){  
            $(".progressbar-value .progressbar-text").css("background-color","#53CA22");  
        }else if (data<=70){  
            $(".progressbar-value .progressbar-text").css("background-color","#EABA0A");  
        }else if (data>70){  
            $(".progressbar-value .progressbar-text").css("background-color","#DF4134");  
        }*/  
	});
}

/**
 * ajax上传附件
 * @param inputName input对象的Name值
 * @param maxSize 附件的最大值，单位：m
 * @param fileType 附件类型
 */
function ajaxFileUploadEasyui(url,inputName, maxSize, fileType,saveOrNot)
{
	/*var f=document.getElementById(''+inputName).files;
	console.log(f);
    if(f.length>0){ 
        var filename=$(''+inputName).val();
        var suffix=filename.substring(filename.lastIndexOf("."),filename.length);
        console.log(suffix);
    }*/
        
	//alert(($("input[name='"+inputName+"']").eq(0)).attr("id"));
	//获取上传文件控件内容
	var uploadPath = $("#"+inputName).filebox("getValue");
	//console.log(uploadPath);
    //if (!uploadPath) { alert('上传错误，请重新选择文件'); return; }
    //var file_typename = uploadPath.substring(uploadPath.lastIndexOf('.'), uploadPath.length);
	//console.log(file_typename);
	//var fileName = $("input[name='"+inputName+"']").get(0).files[0].name;
    var fileName = uploadPath;//uploadPath.substring(uploadPath.lastIndexOf('\''), uploadPath.length);
    //console.log(fileName);
	var fileElementId = ($("input[name='"+inputName+"']").eq(0)).attr("id");
	//console.log(fileElementId);
	var fileTypeArray;
	if(fileType)
	{
		fileTypeArray = fileType.split(",");
	}
	else
	{
		fileTypeArray = new Array(".gif", ".jpg", ".png",".jpeg",".zip",".7z",".rar",".txt",".doc",".docx",".xls",".xlsx",".pdf");
	}
	if(LimitAttach(fileName,fileTypeArray) && fileChangeEasyui(inputName, maxSize))
	{
		var random = randomString(20);
		var value = 0;
		var htmlstr = ' ';
		var vals =
			"<tr>" +
			"<td style='min-width:200px;' id='"+random+"_td'></td>" +
			"<td align='center'>" +
			"<div id='"+random+"_bar' class='easyui-progressbar' data-options='value:10' style='width:200px;height:15px;'></div>"+
			"</td>" +
			"</tr>";
		//$("#uploadFilesAjax").append(vals);----
		//uploadProcessTimer = window.setInterval(getFileUploadProcess(random), 20);//1000为1秒钟  ----
		//http://blog.csdn.net/justinytsoft/article/details/52668860
		$.ajaxFileUpload
		({
			url:url,
			secureuri:false,//是否启用安全提交,默认为false
			fileElementId:fileElementId,//文件选择框的id属性
			data:{attachNo: $("#attachNo").val(),saveOrNot:saveOrNot},//除了file外的其他参数
			dataType: 'json',//服务器返回的格式,可以是json、text或xml等
			success: function (data)//服务器响应成功时的处理函数
			{
				var returnVal = eval(data);
				var html = "<tr>" +
				"<td>" +
				"	<a target='blank' href=\"javascript:void(0);\">"+returnVal.fileName+"</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" +
		        "	<input type='button' name='"+returnVal.id+"' value='删除' class='commons_button' style='padding: 2px 10px 3px 10px;' onclick='ajaxRemoveInputFile(this)'/>  " +
				"</td>" +
				"<td></td>" +
				"</tr>";
				//"<a href=\"javascript:void(0);\" style='text-decoration:none;' name='"+returnVal.id+"' onclick=ajaxRemoveInputFileEasyui(this)>&nbsp;&nbsp;<img src='./../../commons/images/t03.png' width='13' height='12'></a>";
				//$("#"+random+"_td").html(html);-----
				$("#uploadFilesAjax").append(html);
				//清除定时器
				/*if(uploadProcessTimer) {---
					window.clearInterval(uploadProcessTimer);
				}*/
			},
			error: function (data)
			{
				//清除定时器
				/*if(uploadProcessTimer) {---
					window.clearInterval(uploadProcessTimer);
				}*/
				art.dialog.alert("上传发生异常");
			},
			complete:function(){
				//解决onChange事件只被触发一次的方法，如果添加了required校验就需要取消校验，不然会触发这个校验
				$("#myfile").filebox("reset");
				$("#myfile").filebox("setValue"," ");
				$("#myfile").filebox("disableValidation");
			}
		});
	}
	else
	{
		//解决onChange事件只被触发一次的方法，如果添加了required校验就需要取消校验，不然会触发这个校验
		$("#myfile").filebox("reset");
		$("#myfile").filebox("setValue"," ");
		$("#myfile").filebox("disableValidation");
	}
}


/**
 * ajax上传附件，只上传图片
 * @param target input对象
 * @param maxSize 附件的最大值，单位：m
 * @param fileType 附件类型
 */
function ajaxFileUploadImg(url,target, maxSize, fileType,saveOrNot,imgId,inputId)
{
	var fileName = target.value;
	var fileTypeArray;
	if(fileType)
	{
		fileTypeArray = fileType.split(",");
	}
	else
	{
		fileTypeArray = new Array(".gif", ".jpg", ".png",".jpeg");
	}
	if(LimitAttach(fileName,fileTypeArray) && fileChange(target, maxSize))
	{
		$.ajaxFileUpload
		({
			url:url,
			secureuri:false,//是否启用安全提交,默认为false
			fileElementId:'myfile',//文件选择框的id属性
			data:{attachNo: '${attachNo}',saveOrNot:saveOrNot},//除了file外的其他参数
			dataType: 'json',//服务器返回的格式,可以是json、text或xml等
			success: function (data)//服务器响应成功时的处理函数
			{
				var returnVal = eval(data); 
				$("#"+imgId).attr("src",returnVal.filePath);
				$("#"+inputId).attr("value",returnVal.filePath);
			},
			error: function (data)
			{
				art.dialog.alert("上传发生异常");
			}
		});
	}
}


/**
 * 选择附件后对附件大小进行判断
 * @param target 
 * @param maxSize
 * @returns
 */
function fileChangeEasyui(inputName, maxSize) {
	var target = document.getElementsByName(inputName)[0];
    var fileSize = 0;
    var isIE = /msie/i.test(navigator.userAgent) && !window.opera;
    if (isIE && !target.files) {
        var filePath = target.value;
        var fileSystem = new ActiveXObject("Scripting.FileSystemObject");
        if (!fileSystem.FileExists(filePath)) {
            //var file = document.getElementById(id);
            target.outerHTML = target.outerHTML;
            return fasle;
        }
        var file = fileSystem.GetFile(filePath);
        fileSize = file.Size;
    } else {
        fileSize = target.files[0].size;
    }
    var size = fileSize / (1024 * 1024);
    if (size > maxSize) {
        art.dialog.alert("附件大小不能大于"+maxSize+"M！");
        //var file = document.getElementById(id);
        target.outerHTML = target.outerHTML;
        return false;
    }
    if (size <= 0) {
    	art.dialog.alert("附件大小不能为0M！");
        //var file = document.getElementById(id);
        target.outerHTML = target.outerHTML
        return false;
    }
    return true;
}


/**
 * 验证附件的后缀
 * @param file 附件的名称
 * @param extArray 可上传的附件类型
 * @returns {Boolean} 返回true或false
 */
function LimitAttach(file, extArray) 
{
	if (!file) 
	{
		return false;
	}
	while (file.indexOf("\\") != -1)
	{
		file = file.slice(file.indexOf("\\") + 1);
	}
	var pos = file.lastIndexOf(".");
	var ext = file.substring(pos,file.length).toLowerCase();  //此处文件后缀名也可用数组方式获得str.split(".") 
	//ext = file.slice(file.indexOf(".")).toLowerCase();
	for (var i = 0; i < extArray.length; i++) {
		if (extArray[i] == ext) 
		{ 
			return true; 
		}
	}
	art.dialog.alert("您上传的文件类型为 "+ext+" ，只能上传:  " + (extArray.join("  ")) + "，请重新选择文件再上传。");
	return false;
}

function fileType(str, fileType){
	 var pos = str.lastIndexOf(".");
	 var lastname = str.substring(pos,str.length)  //此处文件后缀名也可用数组方式获得str.split(".") 
	 var caseName = lastname.toLowerCase();
	 if (caseName!=".jpg" && caseName!=".gif")
	 {
	     alert("您上传的文件类型为"+lastname+"，图片必须为.jpg,.gif类型");
	     return false;
	 }
	 else 
	 {
		 alert("success") ; 
		 return true;
	 }
}

/**
 * ajax上传附件
 * @param target input对象
 * @param maxSize 附件的最大值，单位：m
 * @param fileType 附件类型
 * @param columnName 因为附近关联到字段，所以必须跟项目跟踪表有关联，采用实体.id+字段名
 */
function ajaxFileUploadFunColumn(url,target, maxSize, fileType,saveOrNot,columnName,fileElementId)
{
	var fileName = target.value;
	var fileTypeArray;
	if(fileType)
	{
		fileTypeArray = fileType.split(",");
	}
	else
	{
		fileTypeArray = new Array(".gif", ".jpg", ".png",".jpeg",".zip",".rar",".txt",".doc",".docx",".xls",".xlsx",".pdf");
	}
	if(LimitAttach(fileName,fileTypeArray) && fileChange(target, maxSize))
	{
		$.ajaxFileUpload
		({
			url:url,
			secureuri:false,//是否启用安全提交,默认为false
			fileElementId:fileElementId,//文件选择框的id属性
			data:{attachNo: columnName,saveOrNot:saveOrNot,attachmentNoCurr:$("#attachmentNoCurr").val()},//除了file外的其他参数
			dataType: 'json',//服务器返回的格式,可以是json、text或xml等
			success: function (data)//服务器响应成功时的处理函数
			{
				var returnVal = eval(data); 
				var vals = 
					"<div style='padding: 6px 0 0 0;'>"+
						"<span style='display:inline;'>"+returnVal.fileName+"</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"+ 
				    	"<input type='button' value='删除' id='"+fileElementId+"' class='commons_button' style='padding: 2px 10px 3px 10px;' name='"+returnVal.id+"' value='删除' onclick='ajaxRemoveInputFileTS(this)'/>"+  
					"</div>";
				$("#"+columnName).append(vals);
			},
			error: function (data)
			{
				art.dialog.alert("上传发生异常");
			}
		});
		//清空输入框
		var file = document.getElementById(""+fileElementId);
		if(file)
		{
			file.value = ""; //虽然file的value不能设为有字符的值，但是可以设置为空值
			//或者
			file.outerHTML = file.outerHTML; //重新初始化了file的html
		}
	}
}

/**
 * 上传附件的时候删除一行input-file
 */
function ajaxRemoveInputFileTS(obj){
	art.dialog.confirm('确定要删除数据吗？', function () {
		var delId = $(obj).attr("id");
		//点击“确定”后执行的函数
		var tempdelFileName = $("#"+delId+"_del").val();
	   	var currdelFileName = $(obj).attr("name");
	   	if(tempdelFileName==""){
	   	   $("#"+delId+"_del").val(currdelFileName);
	   	}else{
	   	   $("#"+delId+"_del").val(tempdelFileName+":"+currdelFileName);
	   	}
		$(obj).parent().remove();
	}, function () {
		//点击“取消”后执行的函数
	    //art.dialog.tips('执行取消操作');
	});	
}

/**
 * 选择附件后对附件大小进行判断
 * @param target 
 * @param maxSize
 * @returns
 */
function fileChange(target, maxSize) {
    var fileSize = 0;
    var isIE = /msie/i.test(navigator.userAgent) && !window.opera;
    if (isIE && !target.files) {
        var filePath = target.value;
        var fileSystem = new ActiveXObject("Scripting.FileSystemObject");
        if (!fileSystem.FileExists(filePath)) {
            //var file = document.getElementById(id);
            target.outerHTML = target.outerHTML;
            return fasle;
        }
        var file = fileSystem.GetFile(filePath);
        fileSize = file.Size;
    } else {
        fileSize = target.files[0].size;
    }
    var size = fileSize / (1024 * 1024);
    if (size > maxSize) {
        art.dialog.alert("附件大小不能大于"+maxSize+"M！");
        //var file = document.getElementById(id);
        target.outerHTML = target.outerHTML;
        return false;
    }
    if (size <= 0) {
    	art.dialog.alert("附件大小不能为0M！");
        //var file = document.getElementById(id);
        target.outerHTML = target.outerHTML
        return false;
    }
    return true;
}
//--------------------------附件end-----------------------------

/**
 * 自动补全插件
 * @param url ：请求路径
 * @param targetId 用户隐藏域的id
 * @param targetName 用户输入框的id
 * @param divId 显示查询出来的下拉div的id
 * @param ifmany 是否多选，多选的时候，选择的值显示在输入框上方
 * @param manyDivId 多选的时候，选择的值显示在输入框上方的div的id
 */
function initAutoComplete(url,targetId,targetName,divId,ifmany,manyDivId){
	//=============开始============
	var highlightindex2 = -1;//高亮表示
	var timeoutId2;//延迟加载
	//$("#"+targetName).focus();
		
	//得到文本框对象  
	var wordInput2 = $("#"+targetName);  
	var idAndNames2 = "";      
	//得到文本框距离屏幕左边距和上边的距离  
	var wordInputOffset2 = wordInput2.offset();  
	  
	//自动补全框最开始隐藏起来  
	//添加样式必须现价 css("position","absolute")属性  
	$("#"+divId).hide().css("border", "1px gray solid").css("position", "absolute").css("top", "1px").css("left", "0px");  
	  
	//给文本框添加键盘按下并弹起的事件  
	$("#"+targetName).keyup(function (event) {  
	    //处理文本框中的键盘事件  
	    //得到弹出框对象  
	    var autoNode = $("#"+divId);  
	    //得到当前按键的code值  
	    var myEvent = event || window.evnet;  
	    var keyCode = myEvent.keyCode;  
	      
	    //如果输入的是字母，应该将文本框最新的信息发送给服务器  
	    //如果输入的是退格键或删除键，也应该将文本框的信息发送给服务器  
	   if (keyCode!=13&&keyCode!=38&&keyCode!=40&&(keyCode >= 65 || keyCode <= 90 || keyCode == 8 || keyCode == 46)) {  
	        //1、首先获取文本框的内容  
	        var wordText = $("#"+targetName).val();
	        //文本内容不为空才将文本框内容发给服务器  
	        if (wordText != "") {  
	            //2、将文本框的内容发给服务器  
	            //对上次未执行的延时做清除操作  
	            clearTimeout(timeoutId2);  
	            //对服务器端进行交互延迟500ms,避免快速打字造成的频繁请求  
	            timeoutId2 = setTimeout(function(){  
	            $.ajax({
	            type: "POST",
	            dataType: "json",
	            url: url,
	            data: {"userName":wordText},
	            success: function(json) {
	                //将dom对象data转换成JQuery的对象  
	                //var jqueryobj = $(data);  
	                //找到所有word节点  
	                //var wordNodes = jqueryobj.find("word");  
	                var typeData = json;
	                //遍历所有的word节点，取出单词内容，然后将单词内容添加到弹出框中  
	                //清空div里原来的内容  
	                autoNode.html("");  
	                $.each(typeData, function(i, n){  
	                    //获取单词  
	                    var wordNode = n.text;  
	                    var userId = n.id;
	                    idAndNames2+=userId+"≡"+wordNode+",";
	                    //新建div节点,将单词内容加入到新建的节点中  
	                    //将新建的节点加入到弹出框的节点中  
	                    var newDivNode = $("<div style='height:25px;line-height:25px;width:345px; cursor:pointer;padding-left:5px;font-weight:bold;font-size:11px;'>").attr("id",i);  
	                    newDivNode.html(wordNode).appendTo(autoNode);  
	                    //添加鼠标进入事件,高亮节点  
	                    newDivNode.mouseover(function(){  
	                        //将原来高亮的节点取消  
	                        if(highlightindex2 != -1){  
	                            $("#"+divId).children("div").eq(highlightindex2).css("background-color","white");  
	                        }  
	                        //记录新的高亮节点  
	                        highlightindex2 =  $(this).attr("id");  
	                        $(this).css("background-color","#6FC0FF");  
	                    });  
	                    //鼠标移出，取消高亮  
	                    newDivNode.mouseout(function(){  
	                        //取消节点的高亮  
	                        $(this).css("background-color","white");  
	                    });  
	                   
	                    //鼠标补全  
	                    newDivNode.click(function(){ 
	                    	event=event||window.event;  
	                        event.stopPropagation(); 
	                    	if(ifmany)
	                    	{
	                    		var ifAdded = checkRepeat("manySelectDiv",n.id);
	        	        		if(!ifAdded)
	        	        		{
	        	        			alert("此数据已经添加，不能再次添加.");
	        	        			$("#"+targetName).val(""); 
	        	        			return false;
	        	        		}
	        	        		var selectedVal = $(this).text();
	        	        		var newName = deleteCompany(selectedVal);
	                    		var oneUserDiv = "<div class=\"justForManyChoose\" id=\""+n.id+"\">"+newName+"<a href=\"javascript:void(0);\" style='text-decoration:none;' onclick=\"removeOneDiv('"+n.id+"')\">&nbsp;&nbsp;<img src='./../../commons/images/t03.png' width='13' height='12'></a></div>";
	                    		$("#"+manyDivId).append(oneUserDiv);
	                    		//隐藏弹出窗体  
		                        $("#"+divId).hide();
		                        $("#"+targetName).val(""); 
	                    	}
	                    	else
	                    	{
	                    		var selectedVal = $(this).text();
	        	        		var newName = deleteCompany(selectedVal);
	                    		//文本框的内容变成高亮显示的内容  
		                        $("#"+targetName).val(newName);  
		                        $("#"+targetId).val(n.id); 
		                        //隐藏弹出窗体  
		                        $("#"+divId).hide();
	                    	}
	                    });  
	                    //失去焦点时让弹出框隐藏
	                    $("#t1").click(function(){                                              
	                        //隐藏弹出窗体  
	                        $("#"+divId).hide();  
	                    });
	                });  
	                //如果服务服务器端有数据,则显示弹出框  
	                if (typeData && typeData.length > 0) {  
	                    autoNode.show(); 
	                   // $("#"+divId).focus();
	                } else {  
	                    autoNode.hide();  
	                      
	                    //弹出框隐藏时没有高亮显示的节点  
	                    highlightindex2 = -1;  
	                }  
	                
	            }
	            
	            });  
	            },500);   
	        } else {  
	            autoNode.hide();  
	            //弹出框隐藏时没有高亮显示的节点  
	            highlightindex2 = -1;  
	        }  
	    } else if(keyCode == 38) {      //向上键             
	        //得到弹出框的所有子节点  
	        var autoNodes = $("#"+divId).children("div");  
	        if(highlightindex2 != -1){  
	            //如果原来存在高亮显示节点，则将背景色改为白色  
	            autoNodes.eq(highlightindex2).css("background-color","white");  
	            //将highlightindex2等于零的情况单独拿出来处理  
	            if(highlightindex2 == 0){  
	                highlightindex2 = autoNodes.length - 1;  
	            }else{  
	                highlightindex2--;  
	            }             
	        }else{  
	            highlightindex2 = autoNodes.length - 1;  
	        }  
	        //让现在高亮的内容变成红色  
	        autoNodes.eq(highlightindex2).css("background-color","#6FC0FF");  
	    }else if(keyCode == 40){    //向下键         
	        //得到弹出框的所有子节点  
	        var autoNodes = $("#"+divId).children("div");  
	        if(highlightindex2 != -1){  
	            //如果原来存在高亮显示节点，则将背景色改为白色  
	            autoNodes.eq(highlightindex2).css("background-color","white");                 
	        }     
	        highlightindex2++;     
	          
	        if(highlightindex2 == autoNodes.length){  
	            highlightindex2 = 0;  
	        }  
	        //让现在高亮的内容变成红色  
	        autoNodes.eq(highlightindex2).css("background-color","#6FC0FF");  
	    }else if (keyCode == 13) {  
	        //如果输入的是回车  
	        if(highlightindex2 != -1){  
	            //取出高亮显示下拉框的内容  
	            var comText = $("#"+divId).hide().children("div").eq(highlightindex2).text(); 
	            
	            if(ifmany)
            	{
	            	var selectedId;
	            	if(idAndNames2.indexOf(',')!=-1){
		                idAndNames2 = idAndNames2.substring(0,idAndNames2.length-1);
		                var newids= idAndNames2.split(",");
		                for(i=0;i<newids.length;i++){
		                //alert(newids[i]);
		                     var idName= newids[i].split("≡");
		                     if(idName[1]==comText){
		                    	 selectedId = idName[0];
		                             break;
		                     }
		                }
		            }
	            	var ifAdded = checkRepeat("manySelectDiv",selectedId);
	        		if(!ifAdded)
	        		{
	        			alert("此数据已经添加，不能再次添加.");
	        			$("#"+targetName).val(""); 
	        			return false;
	        		}
	        		var newName = deleteCompany(comText);
            		var oneUserDiv = "<div class=\"justForManyChoose\" id=\""+selectedId+"\">"+newName+"<a href=\"javascript:void(0);\" style='text-decoration:none;' onclick=\"removeOneDiv('"+selectedId+"')\">&nbsp;&nbsp;<img src='./../../commons/images/t03.png' width='13' height='12'></a></div>";
            		if(selectedId)
            		{
            			//防止直接输入文字还没等结果回来就直接回车了
            			$("#"+manyDivId).append(oneUserDiv);
            		}
            		else
            		{
            			return false;
            		}
            		//隐藏弹出窗体  
                    $("#"+divId).hide();
                    $("#"+targetName).val("");
            	}
            	else
            	{
            		var newName = deleteCompany(comText);
		            //文本框的内容变成高亮显示的内容  
		            $("#"+targetName).val(newName);  
		            //获取id
		            if(idAndNames2.indexOf(',')!=-1){
		                idAndNames2 = idAndNames2.substring(0,idAndNames2.length-1);
		                var newids= idAndNames2.split(",");
		                for(i=0;i<newids.length;i++){
		                //alert(newids[i]);
		                     var idName= newids[i].split("≡");
		                     if(idName[1]==comText){
		                         $("#"+targetId).val(idName[0]);
		                             break;
		                     }
		                }
		            }
		            highlightindex2 = -1; 
            	}
	        }else{  
	        	if(ifmany)
            	{
	        		var ifAdded = checkRepeat("manySelectDiv",$("#"+targetId).val());
	        		if(!ifAdded)
	        		{
	        			alert("此数据已经添加，不能再次添加.");
	        			$("#"+targetName).val(""); 
	        			return false;
	        		}
	        		var selectedVal = $("#"+targetName).val();
	        		var newName = deleteCompany(selectedVal)
            		var oneUserDiv = "<div class=\"justForManyChoose\" id=\""+$("#"+targetId).val()+"\">"+newName+"<a href=\"javascript:void(0);\" style='text-decoration:none;' onclick=\"removeOneDiv('"+$("#"+targetId).val()+"')\">&nbsp;&nbsp;<img src='./../../commons/images/t03.png' width='13' height='12'></a></div>";
            		if($("#"+targetId).val())
            		{
            			//防止直接输入文字还没等结果回来就直接回车了
            			$("#"+manyDivId).append(oneUserDiv);
            		}
            		else
            		{
            			return false;
            		}
            		//隐藏弹出窗体  
                    $("#"+divId).hide();
                    $("#"+targetName).val("");
            	}
            	else
            	{
            		var selectedVal = $("#"+targetName).val();
	        		var newName = deleteCompany(selectedVal)
		        	var wordText = newName;
			        var wordTextId = $("#"+targetId).val();
            	}
		        if(wordText&&wordTextId)
		        {
		        	submitForm();
		        	return;
		        }
	            var obj = $("#"+targetName);  
	            var count = obj.val();  
	            obj.val("");
	            //alert("文本框中的[" + count + "]被提交了");  
	              
	            //让文本框失去焦点  
	            obj.get(0).blur();  
	            
		        
	        }             
	    }  
	});  
} 
//判断当前选中的用户是否已经选了
function checkRepeat(parentId,id){
	var getdiv = $("#"+id);
	var getparentId = $("#"+id).parent().attr("id");
	if(getdiv && parentId==getparentId)
	{
		return false;
	}
	return true;
}
//选中后删除姓名后面的公司——其实带着更好
function deleteCompany(userName)
{
	/*if(userName.indexOf("(")>-1)
	{
		return userName.substring(0,userName.indexOf("("));
	}
	else if(userName.indexOf("（")>-1)
	{
		return userName.substring(0,userName.indexOf("（"));
	}
	else
	{
		return userName;
	}*/
	return userName;
}

function removeOneDiv(id)
{
	var confirmValue = "确定删除数据吗？";
	art.dialog.confirm(confirmValue, function () {
	$("#"+id).remove();
	});
}

function setDataToInput(valueDiv,inputId,inputNmae){
	var ids = "";
	var names = "";
	var divs = $("#"+valueDiv).children();
	if(divs && divs.length>0)
	{
		for(var i=0;i<divs.length;i++)
		{
			ids+=","+$(divs[i]).attr("id");
			var currName = $(divs[i]).text()
			currName = deleteCompany(currName);
			names+=","+currName;
		}
	}
	else
	{
		$("#"+inputId).val("");
		$("#"+inputNmae).val("");
		return;
	}
	if(ids.length>1)
	{
		ids = ids.substring(1);
	}
	if(names.length>1)
	{
		names = names.substring(1);
		names = names.replace("&nbsp;","");
	}
	names=del_html_tags(names,"删除","");
	$("#"+inputId).val(ids);
	$("#"+inputNmae).val(names);
}

/**
 * textarea自动提示剩余文字
 * @param oTextArea
 */
function LessThan(oTextArea){
    //获得textarea的maxlength属性
    var MaxLength=oTextArea.getAttribute("maxlength");
    var id=oTextArea.getAttribute("id");
    var num=MaxLength-oTextArea.value.length;  
    if(num==MaxLength){
           $('#'+id+'Num').attr('visi','yes').hide();
    }else{
           $('#'+id+'Num').attr('visi','yes').show();
           $('#'+id+'Num').html("<font style='font-size:9px;'>还能输入："+num+"个字</font>");
    }
    //返回文本框字符个数是否符号要求的boolean值——会导致加了空格
    //return oTextArea.value.length < oTextArea.getAttribute("maxlength");
}