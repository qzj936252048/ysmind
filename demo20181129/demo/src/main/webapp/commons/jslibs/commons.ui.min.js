
//http://blog.sina.com.cn/s/blog_7b87efa501014sfu.html
$.extend($.fn.datagrid.methods, {
	columnMoving: function(jq) {
		return jq.each(function() {
			var target = this;
			var cells = $(this).datagrid('getPanel').find('div.datagrid-header td[field]');
			cells.draggable({
				revert: true,
				cursor: 'pointer',
				edge: 5,
				proxy: function(source) {
					var p = $('<div class="tree-node-proxy tree-dnd-no" style="position:absolute;border:1px solid #ff0000"/>').appendTo('body');
					p.html($(source).text());
					p.hide();
					return p;
				},
				onBeforeDrag: function(e) {
					e.data.startLeft = $(this).offset().left;
					e.data.startTop = $(this).offset().top;
				},
				onStartDrag: function() {
					$(this).draggable('proxy').css({
						left: -10000,
						top: -10000
					});
				},
				onDrag: function(e) {
					$(this).draggable('proxy').show().css({
						left: e.pageX + 15,
						top: e.pageY + 15
					});
					return false;
				}
			}).droppable({
				accept: 'td[field]',
				onDragOver: function(e, source) {
					$(source).draggable('proxy').removeClass('tree-dnd-no').addClass('tree-dnd-yes');
					$(this).css('border-left', '1px solid #ff0000');
				},
				onDragLeave: function(e, source) {
					$(source).draggable('proxy').removeClass('tree-dnd-yes').addClass('tree-dnd-no');
					$(this).css('border-left', 0);
				},
				onDrop: function(e, source) {
					$(this).css('border-left', 0);
					var fromField = $(source).attr('field');
					var toField = $(this).attr('field');
					setTimeout(function() {
						moveField(fromField, toField);
						$(target).datagrid();
						$(target).datagrid('columnMoving');
					}, 0);
				}
			});
		
			// move field to another location 
			function moveField(from, to) {
				var columns = $(target).datagrid('options').columns;
				var cc = columns[0];
				var c = _remove(from);
				if(c) {
					_insert(to, c);
				}
		
				function _remove(field) {
					for(var i = 0; i < cc.length; i++) {
						if(cc[i].field == field) {
							var c = cc[i];
							cc.splice(i, 1);
							return c;
						}
					}
					return null;
				}
			
				function _insert(field, c) {
					var newcc = [];
					for(var i = 0; i < cc.length; i++) {
						if(cc[i].field == field) {
						newcc.push(c);
					}
						newcc.push(cc[i]);
					}
					columns[0] = newcc;
				}
			}
		});
	}
});

function areaFormatter(value, rowData, rowIndex){
	//1：国家；2：省份、直辖市；3：地市；4：区县
	var val = "";
	if(value)
	{
		if("1"==value){val="国家";}
		else if("2"==value){val="省份、直辖市";}
		else if("3"==value){val="市区";}
		else if("4"==value){val="县区";}
	}
    return val; 
}

function officeFormatter(value, rowData, rowIndex){
	//机构类型（1：公司；2：部门；3：小组）
	var val = "";
	if(value)
	{
		if("1"==value){val="公司";}
		else if("2"==value){val="部门";}
		else if("3"==value){val="小组";}
	}
    return val; 
}

function timeFormatter(value, rowData, rowIndex){
	if(!value || ""==value){return "";}
	var date=new Date(value);  
    var str=date.getHours()+":"+date.getMinutes()+":"+date.getSeconds();  
    return str; 
}

function dateTimeFormatter(value, rowData, rowIndex){
	if(!value || ""==value){return "";}
	var date=new Date(value);  
    var str=date.getFullYear()+"-"+(date.getMonth()+1)+"-"+date.getDate()+" "+date.getHours()+":"+date.getMinutes()+":"+date.getSeconds();  
    return str; 
}

function dateFormatter(value, rowData, rowIndex){
	if(!value || ""==value){return "";}
	var date=new Date(value);  
    var str=date.getFullYear()+"-"+(date.getMonth()+1)+"-"+date.getDate();  
    return str; 
}
function flowStatueFormatter(value, rowData, rowIndex) {
	var htmlstr = "";
    if("create"==value){htmlstr="已创建";}
    else if("submit"==value){htmlstr="已提交";}
    else if("approving"==value){htmlstr="审批中";}
    else if("finish"==value){htmlstr="已完成";}
    if(rowData && rowData.terminationStatus)
	{
		//return "<div style='font-weight:bolder;background-color:#DADADA;height:30px;line-height:30px;'>已终止</div>"
		if(rowData.terminationStatus=="deleteAll")
		{htmlstr += "(已终止)"}
		else if(rowData.terminationStatus=="editAnyway")
		{htmlstr += "(放开修改)"}
	}
    return htmlstr;
}

function flowStatueFormatterN(value, rowData, rowIndex) {
    if(rowData && rowData.terminationStatus)
	{
		//return "<div style='font-weight:bolder;background-color:#DADADA;height:30px;line-height:30px;'>已终止</div>"
		if(rowData.terminationStatus=="deleteAll")
		{value += "(已终止)"}
		else if(rowData.terminationStatus=="editAnyway")
		{value += "(放开修改)"}
	}
    return value;
}

function recordStatusFormatter(value, rowData, rowIndex){
	var htmlstr = "正常审批";
    if("default"==value){htmlstr="正常审批";}
    else if("telling"==value){htmlstr="知会-激活";}
    else if("telled"==value){htmlstr="知会-已阅";}
    else if("finish"==value){htmlstr="完成";}
    else if("urge"==value){htmlstr="催办";}
    else if("back"==value){htmlstr="退回";}
    return htmlstr;
}

function levelFormatter(value, rowData, rowIndex) {
	var htmlstr = "";
    if("1"==value){htmlstr="level1现有结构和应用";}
    else if("2"==value){htmlstr="level2现有结构材料厚度变化,或新应用";}
    else if("3"==value){htmlstr="level3现有材料组合的新结构,或新原材料";}
    else if("4"==value){htmlstr="level4新材料开发的新结构,或新设备、新技术的开发";}
    return htmlstr;
}

function formTypeFormatter(value, rowData, rowIndex) {
	var htmlstr = "";
    if("form_create_project"==value){htmlstr="产品立项";}
    else if("form_raw_and_auxiliary_material"==value){htmlstr="原辅材料立项";}
    else if("form_project_tracking"==value){htmlstr="项目跟踪";}
    else if("form_sample"==value){htmlstr="样品申请";}
    else if("form_test_sample"==value){htmlstr="试样单";}
    else if("form_leave"==value){htmlstr="请假单";}
    return htmlstr;
}

function randomString(len) {
　　len = len || 20;
　　var $chars = 'abcdefhijkmnprstwxyz2345678';    /****默认去掉了容易混淆的字符oOLl,9gq,Vv,Uu,I1****/
　　var maxPos = $chars.length;
　　var pwd = '';
	　　for (i = 0; i < len; i++) {
	　　　　pwd += $chars.charAt(Math.floor(Math.random() * maxPos));
	　　}
	　　return pwd;
}

function printViewR(dataGridId,urlFrom,formType,context){
	var selectnum = $('#'+dataGridId).datagrid('getSelections');  
	if (!selectnum || selectnum.length == 0) {
		$.iMessager.alert('提示', '请选中你所需要操作的记录！', 'messager-info');
		return null;
	} else if (selectnum.length > 1) {
		$.iMessager.alert({title: "提示", msg: "当前操作只能选择一条记录!",top:150});
		return null;
	}
	var entityId = selectnum[0].id;
	art.dialog.data("returnValue","");
	var url = urlFrom+entityId;
	if(formType && "form_test_sample"==formType)
	{
		printGyxhChooseR(context,entityId)
	}
	else
	{
		art.dialog.open(url, {
			id : 'printPage',
			title : '打印预览',
			width : '900px',
			height : '615px',
			lock : true,
			opacity : 0.1,// 透明度  
			close : function() {
			}
		}, false);
	}
}

function initSortR(dataGridId,sortElementId){
	$('#'+sortElementId).combobox({
	    data:[{"id":"server","title":"服务器排序"},{"id":"blower","title":"浏览器排序"}],
	    valueField:'id',
	    textField:'title',
	    width:100,
	    remoteSort:false,multiSort:true,
	    onChange: function (n,o) {
       		var val = $('#'+sortElementId).combobox('getValue');
	    	if("blower"==val)
	    	{
	    		$('#'+dataGridId).datagrid({remoteSort:false,multiSort:true});
	    	}
	    	else
	    	{
	    		$('#'+dataGridId).datagrid({remoteSort:true,multiSort:true});
	    	}
       	}
	});
    $('#'+sortElementId).combobox("setValue","blower");//设置、设置默认值
}

//打开Tab窗口
function addTab(url,title,closable,iconCls,border) {
	var iframe = '<iframe src="' + url + '" frameborder="0" style="border:0;width:100%;height:100%;"></iframe>';
    parent.$('#index_tabs').iTabs("add", {
    	id: randomString(20),
        refererTab: {},
        title: title,
        closable: typeof(closable) != "undefined" ? closable : true,
        iconCls: iconCls ? iconCls : 'fa fa-file-text-o',
        content: iframe,
        //href: params.url,
        border: border || true,
        fit: true
        //cls: 'leftBottomBorder'
    });
	
	/*var productDg = {
            type: 'datagrid',
            id: 'createProjectDg'
        };
	
	$("#openTab").iMenubutton({
	    method: 'openTab',
	    btnCls: 'topjui-btn-purple',
	    tab: {
	        title: title,
	        href: url
	    },
	    grid: productDg
	});*/
}



function addDataR(id,dataGridId,formUrl,title,selectedId){
	if(id && id=="copy")
	{
		var selectnum = $('#'+dataGridId).datagrid('getSelections');  
		if (!selectnum || selectnum.length == 0) {
			$.iMessager.alert('提示', '请选中你所需要操作的记录！', 'messager-info');
			return null;
		} else if (selectnum.length > 1) {
			$.iMessager.alert({title: "提示", msg: "当前操作只能选择一条记录!",top:150});
			return null;
		}
		var entityId = selectnum[0].id;
		addTab(formUrl+"type=copy&entityId="+entityId,"复制"+title,true);
	}
	else if(id && id=="add")
	{
		var url = formUrl;
		addTab(url,"新增"+title,true);
	}
	else if(id && "edit"==id && selectedId)
	{
		addTab(formUrl+"id="+selectedId,"编辑"+title,true);
	}
	else if(id && "edit"==id)
	{
		var selectnum = $('#'+dataGridId).datagrid('getSelections');  
		if (!selectnum || selectnum.length == 0) {
			$.iMessager.alert('提示', '请选中你所需要操作的记录！', 'messager-info');
			return null;
		} else if (selectnum.length > 1) {
			$.iMessager.alert({title: "提示", msg: "当前操作只能选择一条记录!",top:150});
			return null;
		}
		var entityId = selectnum[0].id;
		addTab(formUrl+"id="+entityId,"编辑"+title,true);
	}
	else
	{
		var url = formUrl;
		addTab(url,title,true);
	}
}

/**
 * 
 * @param id
 * @param dataGridId
 * @param formUrl
 * @param title
 * @param addChooseUrl
 * @param chooseTitle
 * @param copyChooseUrl
 * @param copyUrl
 * @param context
 */
function addDataChooseR(id,dataGridId,formUrl,title,addChooseUrl,chooseTitle,copyChooseUrl,copyUrl,context){
	if(id && id=="copy")
	{
		var selectnum = $('#'+dataGridId).datagrid('getSelections');  
		if (!selectnum || selectnum.length == 0) {
			$.iMessager.alert('提示', '请选中你所需要操作的记录！', 'messager-info');
			return null;
		} else if (selectnum.length > 1) {
			$.iMessager.alert({title: "提示", msg: "当前操作只能选择一条记录!",top:150});
			return null;
		}
		id = selectnum[0].id;
		if(id)
		{
			art.dialog.data("returnValue","");
			var url = copyChooseUrl;
			art.dialog.open(url, {
	    		id : randomString(20),
	    		title : '选择'+chooseTitle,
	    		width : '1000px',
	    		height : '70%',
	    		lock : true,
	    		opacity : 0.1,// 透明度  
	    		close : function() {
	    			var returnObj = art.dialog.data("returnValue");
	    			if(returnObj && returnObj.length>0)
	    			{
	    				var canCopy = true;
	    				if("-1"==returnObj[0] && "testSampleDg"==dataGridId)
	    				{
	    					//复制的时候要判断立项已提交结案的样品申请单不可以复制
	    					$.ajax({
	    						type : "get",
	    						url: context+"/form/testSample/judgeCanCopy",
	    				        dataType: "json",
	    				        data:{"testSampleId":id},
	    						async: false,
	    				        beforeSend: function () {
	    				            $.messager.progress({
	    				                text: "正在验证..."
	    				            })
	    				        }, success: function (data) {
	    				            $.messager.progress("close");
	    				            if(data)
	    						  	{
	    						  		if(typeof data == "string")
	    						  		{
	    						  			data = JSON.parse(data);
	    						  		}
	    						  		if(data.status)
	    						  		{
	    						  			if(!data.entityId || "no"==data.entityId)
	    						  			{
	    						  				canCopy = false;
	    						  				$.iMessager.alert({title: "提示", msg: data.message});
	    						  				return false;
	    						  			}
	    						  		}
	    						  		else
	    						  		{
	    						  			if(!data.entityId || "no"==data.entityId)
	    						  			{
	    						  				canCopy = false;
	    						  				$.iMessager.alert({title: "提示", msg: data.message});
	    						  				return false;
	    						  			}
	    						  		}
	    						  	}
	    				        }, error: function(data){
	    				        	$.messager.progress("close");
	    				        	if(data)
	    						  	{
	    						  		if(typeof data == "string")
	    						  		{
	    						  			data = JSON.parse(data);
	    						  		}
	    						  		if(data.status)
	    						  		{
	    						  			if(!data.entityId || "no"==data.entityId)
	    						  			{
	    						  				canCopy = false;
	    						  				$.iMessager.alert({title: "提示", msg: data.message});
	    						  				return false;
	    						  			} 
	    						  		}
	    						  		else
	    						  		{
	    						  			if(!data.entityId || "no"==data.entityId)
	    						  			{
	    						  				canCopy = false;
	    						  				$.iMessager.alert({title: "提示", msg: data.message});
	    						  				return false;
	    						  			}
	    						  		}
	    						  	}
	    				        }
	    				    })
	    				}
	    				if(canCopy)
	    				{
	    					window.setTimeout(realClick, 50)
		    				function realClick(){
		    					var url = copyUrl+"&copyEntityId="+id+"&chooseFormId="+returnObj[0];
		    	    			addTab(url,"复制"+title,true);
		    				}
	    				}
	    			}
	    			else
	    			{
	    				//没有选择值
	    				/*window.setTimeout(realClickBlank, 50)
	    				function realClickBlank(){
	    					var url = copyUrl;
   		        			addTab(url,"复制"+title,true);
	    				}*/
	    			}
	    		}
	    	}, false);
		}
	}
	else if(id && id=="add")
	{
		art.dialog.data("returnValue","");
		var url = addChooseUrl;
		art.dialog.open(url, {
    		id : randomString(20),
    		title : '选择'+chooseTitle,
    		width : '1000px',
    		height : '70%',
    		lock : true,
    		opacity : 0.1,// 透明度  
    		close : function() {
    			var returnObj = art.dialog.data("returnValue");
    			if(returnObj && returnObj.length>0)
    			{
    				window.setTimeout(realClick, 50)
    				function realClick(){
    					var url = "";
    					//-1表示选择当前样品申请，但是新增的时候还是空的，还没关联，所以不能打开新增窗口
    					if("-1"!=returnObj[0])
   						{
   							url = formUrl+"chooseFormId="+returnObj[0];
   							addTab(url,"新增"+title,true);
   						}
    					/*else
   						{
    						url = formUrl+"chooseFormId=-1";
   						}*/
    					
    				}
    			}
    		}
    	}, false);
	}
	else if(id && "edit"==id)
	{
		var selectnum = $('#'+dataGridId).datagrid('getSelections');  
		if (!selectnum || selectnum.length == 0) {
			$.iMessager.alert('提示', '请选中你所需要操作的记录！', 'messager-info');
			return null;
		} else if (selectnum.length > 1) {
			$.iMessager.alert({title: "提示", msg: "当前操作只能选择一条记录!",top:150});
			return null;
		}
		id = selectnum[0].id;
		addTab(formUrl+"id="+id,"编辑"+title,true);
	}
}

/**
 * 通过弹窗的形式新增、修改、删除
 * @param id save、view、copy、edit
 * @param dataGridId 
 * @param url 操作的url
 * @param listUrl reload时候的url
 * @param windowId 弹出窗口的id
 * @param selectedId 选择的id
 * @param width 弹出窗口的宽度
 * @param height
 * @param selectdIdIsParent selectedId是否为parentId yes/no
 * @param gridType 类型：treegrid、datagrid
 * @param needReload 操作成功后是否刷新 yes/no
 */
function addDataWindowR(id,dataGridId,url,listUrl,windowId,selectedId,width,height,selectdIdIsParent,gridType,needReload){
	if(!width){width=700;}
	if(!height){height=500;}
	var entityId ="";
	//var id = $(this).attr("id");
	//var url = "${ctx}/wf/workflow/form";
	url+="?windowId="+windowId+"&dataGridId="+dataGridId;
	if("edit"==id || "copy"==id || "view"==id)
	{
		if(selectedId)
		{
			entityId = selectedId;
		}
		else
		{
			var selectnum ;
			if("tree"==gridType)
			{
				selectnum = $('#'+dataGridId).treegrid('getSelections');  
			}
			else
			{
				selectnum = $('#'+dataGridId).datagrid('getSelections');  
			}
			if (!selectnum || selectnum.length == 0) {
				$.iMessager.alert('提示', '请选中你所需要操作的记录！', 'messager-info');
				return null;
			} else if (selectnum.length > 1) {
				$.iMessager.alert('提示', '当前操作只能选择一条记录！', 'messager-info');
				return null;
			}
			entityId = selectnum[0].id;
		}
		url+="&id="+entityId;
		if("copy"==id){url+="&operationType=copy";}
		if("view"==id){url+="&operationType=view";}
	}
	if("add"==id && selectdIdIsParent && "yes"==selectdIdIsParent)
	{
		url+="&parentId="+selectedId;
	}
	$("#"+windowId).dialog({                    
	    title:'添加数据',  
	    width:width,  
	    height:height,
	    content:"<iframe scrolling='auto' frameborder='0' src='"+url+"' style='width:100%; height:100%; display:block;'></iframe>",
	    onClose : function() {
	    	//alert("close");
	    	//http://blog.csdn.net/maosijunzi/article/details/44160445
               //$(this).dialog('destroy');
	    	if(needReload && "yes"==needReload)
	    	{ 
	    		var opts;
		    	if("tree"==gridType)
				{
					//opts = $("#"+dataGridId).treegrid("options");
					//opts.url = listUrl;
					//$("#"+dataGridId).treegrid("reload");
		    		window.location.href = window.location.href;
				}
				else
				{
					opts = $("#"+dataGridId).datagrid("options");
					opts.url = listUrl;
					$("#"+dataGridId).datagrid("reload");
				}
	    	}
   			//"${ctx}/wf/workflow/listData";
	    	//$("#workflowDg").datagrid("reload");
           }
    });
	$("#"+windowId).dialog("open"); // 打开dialog
	$('#'+windowId).window('center');//使Dialog居中显示
	//https://www.cnblogs.com/wangjunwei/p/4529656.html
	/* 当dialog弹出的两个页面内 都同时存在ID相同的表单元素的时候，容易引发错误。
	因为dialog在调用close的方法时，页面元素并只是隐藏起来。当另外页面弹出时。同时又刚好存在了相同ID的元素 则引起了冲突。
	因此在调用close方法后再调用dialog的destroy销毁方法即可。
	$("#ID").dialog("close");
	$("#ID").dialog("destroy"); */
}

/**
 * 删除，这里要判断管理才能删除，对于表单还是判断创建状态才能删除
 * @param dataGridId
 * @param formUrl
 * @param title
 * @param gridType
 * @param needReload
 * @param needJudgeAuth ：是否需要判断自己创建的并且状态的是创建的才能删除——针对表单
 */
function deleteDataR(dataGridId,formUrl,title,gridType,needReload,needJudgeAuth) {
	var selectnum;
	if("tree"==gridType)
	{
		selectnum = $('#'+dataGridId).treegrid('getSelections');  
	}
	else
	{
		selectnum = $('#'+dataGridId).datagrid('getSelections');  
	} 
	if (!selectnum || selectnum.length == 0) {
		$.iMessager.alert('提示', '请选中你所需要操作的记录！', 'messager-info');
		return null;
	}
	var currentUserIdList = $("#currentUserIdList").val();
	$.messager.confirm("提示", "确认删除所选中数据？", function (a) {
		if(a)
		{
			var selectedIds = "";
			for(var i=0;i<selectnum.length;i++)
			{
				selectedIds+=selectnum[i].id+",";
				
				var createById = selectnum[i].createById;
				var flowStatus = selectnum[i].flowStatus;
				/*console.log("currentUserIdList="+currentUserIdList);
				console.log("createById="+createById);
				console.log("flowStatus="+flowStatus);*/
				if(needJudgeAuth && needJudgeAuth=="createBoth" &&(currentUserIdList.indexOf(createById)<0||"已创建"!=flowStatus)){
					$.iMessager.alert('提示', '只能操作本人创建的，并且未提交的数据！', 'messager-info');
					return null;
				}
				else if(needJudgeAuth && needJudgeAuth=="onlyCreator" && currentUserIdList.indexOf(createById)<0){
					$.iMessager.alert('提示', '只能操作本人创建的数据！', 'messager-info');
					return null;
				}
			}
			
			selectedIds=selectedIds.substring(0,selectedIds.length-1);
			if(selectedIds)
			{
				$.ajax({
			        url: formUrl,
			        type: "get",
			        data: {"id":selectedIds},
			        dataType: "json",
			        async: !1,
			       // contentType: "application/x-www-form-urlencoded;charset=utf-8",//"application/json;charset=utf-8"
			        beforeSend: function () {
			            $.messager.progress({
			                text: "正在操作..."
			            })
			        }, success: function (data) {
			            $.messager.progress("close");
			            if(data)
					  	{
					  		if(typeof data == "string")
					  		{
					  			data = JSON.parse(data);
					  		}
					  		if(data.status)
					  		{
					  			$.messager.alert("确认", data.message,"",function(){ 
				  					if("tree"==gridType)
				  					{
				  						$('#'+dataGridId).treegrid('reload');
				  					}
				  					else
				  					{
				  						$('#'+dataGridId).datagrid('reload');
				  					} 
					        	}); 
					  		}
					  		else
					  		{
					  			$.iMessager.alert({title: data.title, msg: data.message});
					  		}
					  	}
			        }, error: function(data){
			        	$.messager.progress("close");
			        	if(data)
					  	{
					  		if(typeof data == "string")
					  		{
					  			data = JSON.parse(data);
					  		}
					  		if(data.status)
					  		{
					  			$.messager.alert("确认", data.message,"",function(){  
					  				if("tree"==gridType)
				  					{
				  						$('#'+dataGridId).treegrid('reload');
				  					}
				  					else
				  					{
				  						$('#'+dataGridId).datagrid('reload');
				  					} 
					        	}); 
					  		}
					  		else
					  		{
					  			$.iMessager.alert({title: data.title, msg: data.message});
					  		}
					  	}
			        }
			    })
			}
		}
	});
}

//创建状态的表头不能传阅，不然生成的传阅记录保存不了的，都还没有生成审批记录
function circularizeBatchR(dataGridId,context,title) {
	var selectnum = $('#'+dataGridId).datagrid('getSelections');  
	if (!selectnum || selectnum.length == 0) {
		$.iMessager.alert('提示', '请选中你所需要操作的记录！', 'messager-info');
		return null;
	}
	var canPass = true;
	var selectedIds = "";
	for(var i=0;i<selectnum.length;i++)
	{
		//console.log("---------------"+selectnum[i].flowStatus);
		if(!selectnum[i].flowStatus || selectnum[i].flowStatus=="已创建")
		{
			canPass = false;
			$.iMessager.alert('提示', '不能传阅创建状态的表单！', 'messager-info');
			return null;
		}
		selectedIds+=selectnum[i].id+",";
	}
	if(!canPass)
	{
		$.iMessager.alert('提示', '不能传阅创建状态的表单！', 'messager-info');
		return null;
	}
	selectedIds=selectedIds.substring(0,selectedIds.length-1);
	$.messager.confirm("提示", "确认传阅所选中数据？", function (result) {
		if(result)
		{
			art.dialog.data("returnValue","");
			art.dialog.open(context+'/sys/role/userSelect', {
				id : 'chooseUser',
				title : '选择用户',
				width : '900px',
				height : '615px',
				lock : true,
				opacity : 0.1,// 透明度  
				close : function() {
					var returnValue = art.dialog.data("returnValue");
					if(returnValue!="" && returnValue.length>0)
					{
						if(returnValue && returnValue.length>0&&returnValue[0]!=''&&returnValue[0]!='-1')
						{
							/*var canPass = true;
							var selectedIds = "";
							for(var i=0;i<selectnum.length;i++)
							{
								console.log("---------------"+selectnum[i].flowStatus);
								if(!selectnum[i].flowStatus || selectnum[i].flowStatus=="已创建")
								{
									canPass = false;
									$.iMessager.alert('提示', '不能传阅创建状态的表单！', 'messager-info');
									return null;
								}
								selectedIds+=selectnum[i].id+",";
							}
							if(!canPass)
							{
								$.iMessager.alert('提示', '不能传阅创建状态的表单！', 'messager-info');
								return null;
							}
							selectedIds=selectedIds.substring(0,selectedIds.length-1);*/
							if(selectedIds && canPass)
							{
								$.ajax({
									url: context+"/wf/operationRecord/circularizeBatch",
							        type: "get",
							        data: {"formIds":selectedIds,"toUserIds":returnValue[0]},
							        dataType: "json",
							        async: !1,
							       // contentType: "application/x-www-form-urlencoded;charset=utf-8",//"application/json;charset=utf-8"
							        beforeSend: function () {
							            $.messager.progress({
							                text: "正在操作..."
							            })
							        }, success: function (data) {
							            $.messager.progress("close");
							            if(data)
									  	{
									  		if(typeof data == "string")
									  		{
									  			data = JSON.parse(data);
									  		}
									  		if(data.status)
									  		{
									  			$.messager.alert("确认", data.message,"",function(){  
									  				$('#'+dataGridId).datagrid('reload');
									        	}); 
									  		}
									  		else
									  		{
									  			$.iMessager.alert({title: data.title, msg: data.message});
									  		}
									  	}
							        }, error: function(data){
							        	$.messager.progress("close");
							        	if(data)
									  	{
									  		if(typeof data == "string")
									  		{
									  			data = JSON.parse(data);
									  		}
									  		if(data.status)
									  		{
									  			$.messager.alert("确认", data.message,"",function(){  
									  				$('#'+dataGridId).datagrid('reload');
									        	}); 
									  		}
									  		else
									  		{
									  			$.iMessager.alert({title: data.title, msg: data.message});
									  		}
									  	}
							        }
							    })
							}
						}
					}
				}
			})
		}
	});
}


/**
 * 按固定格式导出
 * @param url
 * @param fieldName
 */
function myExportR(url,fieldName,datagridId){
	var fieldParams = "";
	if(fieldName&&fieldName.length>0)
	{
		for(var i=0;i<fieldName.length;i++)
		{
			fieldParams+="&"+fieldName[i]+"="+$('#'+fieldName[i]).iTextbox('getValue');
		}
	}
	var queryType = $("#queryType").val();
	var queryPlace = $("#queryPlace").val();
	if("fromAuth"==queryType || "normal"==queryType)//查询、按权限查询
	{
		if(queryPlace && "fromZuhe"==queryPlace)//在组合查询中点击的查询、按权限查询
		{
			var queryValue = $("#queryValue").val();//项目类型
    		var queryOther = $("#queryOther").val();//组合查询的值
    		url+="&queryValue="+queryValue+"&advanceFilter="+queryOther;
		}
		else//在列表页面中点击的查询、按权限查询
		{
			url += fieldParams;
		}
	}
	else if("fromProjectType")//按项目类型查询
	{
		var queryValue = $("#queryValue").val();//项目类型
		url+="&queryValue="+queryValue;
		if(queryPlace && "fromZuhe"==queryPlace)
		{
    		var queryOther = $("#queryOther").val();//组合查询的值
    		url+="&advanceFilter="+queryOther;
		}
		else//在列表页面中点击的按项目类型查询
		{
			url += fieldParams;
		}
	}
	else
	{
	}
	var fields = "";
	var titles = "";
	if(datagridId)
	{
		var row = $('#'+datagridId).datagrid('options'); 
		var columns = row.columns;//非冻结列
		var frozenColumns =  row.frozenColumns;//冻结列
		var optionList=[];
		if(frozenColumns && frozenColumns.length>0)
		{
			for(var i=0;i<frozenColumns.length;i++)
			{
				var oneColumn = frozenColumns[i];
				if(oneColumn && oneColumn.length>0)
				{
					for(var j=0;j<oneColumn.length;j++)
					{
						var col = oneColumn[j];
						titles+=col.title+",";// string 列标题文本。 undefined 
						fields+=col.field+",";// string 列字段名称。 undefined 
					}
				}
			}
		}
		if(columns && columns.length>0)
		{
			for(var i=0;i<columns.length;i++)
			{
				var oneColumn = columns[i];
				if(oneColumn && oneColumn.length>0)
				{
					for(var j=0;j<oneColumn.length;j++)
					{
						var col = oneColumn[j];
						var one={};
						if(!col.hidden)
						{
							var col = oneColumn[j];
							titles+=col.title+",";// string 列标题文本。 undefined 
							fields+=col.field+",";// string 列字段名称。 undefined 
						}
					}
				}
			}
		}
	}
	console.log("fields="+fields);
	console.log("titles="+titles);
	url+="&fields="+fields+"&titles="+titles;
	$('<form method="post" action="' + url + '"></form>').appendTo('body').submit().remove();
	/* $.ajax({
        type: "POST",
        dataType: "json",
        url: url,
        data: {},
        success: function(obj) {
        }
	}); */   
}

function urlAddParams(url){
	if(url.indexOf("?")<0)
	{
		url+="?";
	}
	var queryEntrance = $("#queryEntrance").val();
	if(!queryEntrance){
		queryEntrance="normal";
	}
	url+="&queryEntrance="+queryEntrance;
	var ifNeedAuth = $("#ifNeedAuth").val();
	if(!ifNeedAuth){
		ifNeedAuth="no";
	}
	url+="&ifNeedAuth="+ifNeedAuth;
	
	var rawAndAuxiliaryMaterialId = $("#rawAndAuxiliaryMaterialId").val();
	if(rawAndAuxiliaryMaterialId){
		url+="&rawAndAuxiliaryMaterialId="+rawAndAuxiliaryMaterialId;
	}
	var createProjectId = $("#createProjectId").val();
	if(createProjectId){
		url+="&createProjectId="+createProjectId;
	}
	var sampleId = $("#sampleId").val();
	if(sampleId){
		url+="&sampleId="+sampleId;
	}
	var queryCascade = $("input[name='queryCascade']:checked").val();
	if(queryCascade){
		url+="&queryCascade="+queryCascade;
	}
	return url;
}

/**
 * 组合查询
 * @param a
 * @param listDataUrl
 * @param context
 * @param dataGridName
 * @param tableName
 * @param buttons 各表单除查询外的按钮
 * @param changeGetParamMethod true表示表单自己拼接查询的参数
 */
function complexQueryR(a,listDataUrl,context,dataGridName,tableName,buttons,changeGetParamMethod) {
	//var a = this;
	var b = $.data(a, "menubutton").options;
    "object" == typeof b.grid && getColumnsNameAndField(b.grid.type, b.grid.id);
    var c = '<table id="advanceSearchTable" class="editTable">';
    c += "<tr>", 
    c += '<td style="font-weight: bold;">方式</td>', 
    c += '<td style="font-weight: bold;">左括号</td>', 
    c += '<td style="font-weight: bold;">字段</td>', 
    c += '<td style="font-weight: bold;">条件</td>', 
    c += '<td style="font-weight: bold;">数值</td>', 
    c += '<td style="font-weight: bold;">右括号</td>', 
    c += '<td style="font-weight: bold;"><a id="addCondition" href="javascript:void(0)"></a></td>', 
    c += "</tr>", 
    c += "<tr id='first'>", 
    c += '<td><input type="text" class="join" name="join"></td>', 
    c += '<td><input type="text" class="lb" name="lb"></td>', 
    c += '<td><input type="text" class="field" name="field"></td>', 
    c += '<td><input type="text" class="op" name="op"></td>', 
    c += '<td><input type="text" class="value" name="value"></td>', 
    c += '<td><input type="text" class="rb" name="rb"></td>', 
    c += '<td><a class="deleteCondition" href="javascript:void(0)"></a></td>', 
    c += "</tr>", 
    c += "</table>";
    var d = {
        dialog: {
            id: "advanceSearchDialog",
            title: "组合查询",
            width: 900,
            height: 500,
            modal: !1,
            collapsible: !0,
            minimizable: !1,
            maximized: !1,
            resizable: !0,
            closed: !1,
            closable: !0,
            zIndex: 10,
            iconCls: "fa fa-search",
            content: c,
            buttons: "#advanceSearchDialog-buttons",
            onOpen: function () {
                $(this).trigger(topJUI.eventType.initUI.advanceSearchForm)
            }
        }
    };
    b = $.extend(d, b);
    var e = '<form id="advanceSearchDialog"></form>';
    e += '<div id="advanceSearchDialog-buttons" style="display:none">', 
    //e += '<a href="#" id="resetAdvanceSearchForm" data-toggle="topjui-linkbutton" data-options="iconCls:\'icon-reload\',btnCls:\'topjui-btn-green\'">清空</a>', 
    e += buttons,
    e += '<a href="#" class="submitAdvanceSearchForm" id="normal" queryType="normal" data-toggle="topjui-linkbutton" data-options="iconCls:\'icon-search\'">查询</a>', 
    e += '<a href="#" id="closeAdvanceSearchDialog" data-toggle="topjui-linkbutton" data-options="btnCls:\'topjui-btn-red\'">关闭</a>', 
    e += "</div>", $("body").append(e);
    var f = $("#" + b.dialog.id);
    f.dialog(b.dialog), 
    $("#resetAdvanceSearchForm").linkbutton({
        iconCls: "fa fa-refresh",
        onClick: function () {
            var a = [];
            loadGrid(a)
        }
    }), 
    $(".submitAdvanceSearchForm").linkbutton({
        iconCls: "fa fa-search",
        btnCls: "topjui-btn-orange",
        onClick: function () {
            for (var a = [], c = $("#" + b.dialog.id).serializeArray(), d = c.length / 6, e = 0; e < d; e++) {
                var f = (c[6 * e + 0].name, c[6 * e + 0].value),
                    g = (c[6 * e + 1].name, c[6 * e + 1].value),
                    h = (c[6 * e + 2].name, c[6 * e + 2].value),
                    i = (c[6 * e + 3].name, c[6 * e + 3].value),
                    j = (c[6 * e + 4].name, c[6 * e + 4].value),
                    k = (c[6 * e + 5].name, c[6 * e + 5].value);
                a.push({
                    join: f,
                    lb: g,
                    field: h,
                    op: i,
                    value: j,
                    rb: k
                })
            }
            var id = $(this).attr("id");
    		var queryUrl = listDataUrl;
    		if(queryUrl.indexOf("?")>-1)
    		{
    			queryUrl+="&queryValue="+id;
    		}
    		else
    		{
    			queryUrl+="?queryValue="+id;
    		}
    		
    		if("wf_operation_record"==tableName)
    		{
    			//工作台查询要选择对应的查询类型
    			var myQueryTypeValue = $("#myQueryTypeValue").val();
    			queryUrl = getOperationUrl(myQueryTypeValue,"listData");
    			queryUrl += "&queryValue="+id;
    			
    			//console.log("------------------------");
    			var arr = a;
    			if(arr)
    			{
    				if(!arr[0].field)
    				{
    					$("#" + b.dialog.id).dialog("close");
    					return;
    				}
    			}
    		}
    		$("#queryValue").val(id);//按项目类型查询的时候的具体项目类型
    		
    		var queryType = $(this).attr("queryType");
    		$("#queryType").val(queryType);//查询类型：按项目类型查询、普通查询、按权限查询
    		queryUrl+="&queryType="+queryType;
    		if(changeGetParamMethod)
    		{
    			queryUrl = urlAddParamsEntity(queryUrl);
    		}
    		else
    		{
    			queryUrl = urlAddParams(queryUrl);
    		}
            /*$("#queryType").val("zuhe");
            var id=$(this).attr("id");
            $("#requestUrl").val(id);
            $("#queryValue").val(a);
            var queryUrl = listDataUrl+"?requestUrl="+id;*/
            var queryTitle = $("#queryTitle").val();
            //console.log("---------queryTitle---------"+queryTitle);
            if(queryTitle)
            {
            	queryUrl+="&queryTitle="+queryTitle;
            }
            var opts = $("#"+dataGridName).datagrid("options");
            opts.url = queryUrl;
            $("#queryPlace").val("zuhe");
            if("fromProjectType"==queryType)
            {
            	//按项目类型查询的话清除列表页输入框的值
            	 //loadGrid(a);
                $("#"+dataGridName).datagrid("load", {
                    advanceFilter: JSON.stringify(a),
                    queryParams: JSON.stringify($("#queryForm"))
                })
            }
            else
            {
            	 //loadGrid(a);
                $("#"+dataGridName).datagrid("load", {
                    advanceFilter: JSON.stringify(a)
                })
            }
            $("#" + b.dialog.id).dialog("close");
        }
    }), 
    $("#closeAdvanceSearchDialog").linkbutton({
        iconCls: "fa fa-close",
        onClick: function () {
            $("#" + b.dialog.id).dialog("close");
        }
    });
     
    $("#addCondition").on("click", function () {
    	var random_f = randomString(20);
        var g = "<tr class='second'>";
        g += '<td><input type="text" class="join" name="join"></td>', 
        g += '<td><input type="text" class="lb" name="lb"></td>', 
        g += '<td><input type="text" id="'+random_f+'" class="field" name="field"></td>', 
        g += '<td><input type="text" class="op" name="op"></td>', 
        g += '<td><input type="text" class="value" name="value"></td>', 
        g += '<td><input type="text" class="rb" name="rb"></td>', 
        g += '<td><a class="deleteCondition" href="javascript:void(0)"></a></td></tr>';
        $("#advanceSearchTable").append(g), $(this).trigger(topJUI.eventType.initUI.advanceSearchForm);
        initFiled(random_f,context,tableName);
    });
    var prepare= "<tr><td colspan='7'>保存查询条件：<input id='queryTitle' placeholder='请命名'></td></tr>";
	$("#advanceSearchTable").prepend(prepare);
    $("#queryTitle").iTextbox({width:593});
    //查询历史
	$.ajax({
        type: "GET",
        dataType: "json",
        url: context+"/sys/queryLog/complexQuery?tableName="+tableName,
        data: {},
        success: function(obj) {
        	if(obj && obj.length>0)
        	{
        		//var obj = JSON.parse(json);
        		//自动选中第一个，需要这样的话就要把默认第一行删掉，用历史第一行给予增加行按钮
            	//var prepare= "<tr><td colspan='7'><input id='queryList' value='"+obj[0].title+"' style='width:590px;'></td></tr>";
            	var prepare= "<tr><td colspan='7'>历史查询记录：<input id='queryList' style='width:593px;'></td></tr>";
           		$("#advanceSearchTable").prepend(prepare);
           		$('#queryList').combobox({
           		    data:obj,
           		    valueField:'id',
           		    textField:'title'
           		});
           		//initOneQueryLog(a,obj[0].id);
           		//$("#queryList").combobox('setValue',obj[0].title);
           		$("#queryList").combobox({
           	       	onChange: function (n,o) {
           	       		//$('#combobox).combobox('getValue')//获取值
           	       		//$('#queryList').combobox('getText')//获取文本
           	       		initOneQueryLog(a,n,tableName,context);
           	       	}
           	   	});
            	//$.parser.parse("#advanceSearchTable");
        	}
        }
	});    
    initFiled(null,context,tableName);
}
function initOneQueryLog(a,id,tableName,context){
	$.ajax({
        type: "GET",
        dataType: "json",
        url: context+"/sys/queryLog/complexQueryDetail?id="+id,
        data: {},
        success: function(obj) {
        	if(obj && obj.length>0)
        	{
        		$("#first").remove();
        		$(".second").remove();
        		var selected = "";
            	for(var i=0;i<obj.length;i++)
            	{
            		var random = randomString(20);
            		selected += "<tr class='second'>", 
            		selected += '<td><input type="text" id="'+random+'_join" class="join" value="'+obj[i].join+'" name="join"></td>', 
            		selected += '<td><input type="text" id="'+random+'_lb" class="lb" value="'+obj[i].lb+'" name="lb"></td>', 
            		selected += '<td><input type="text" id="'+random+'_field" class="field" value="'+obj[i].field+'" name="field"></td>', 
            		selected += '<td><input type="text" id="'+random+'_op" class="op" value="'+obj[i].op+'" name="op"></td>', 
            		selected += '<td><input type="text" id="'+random+'_value" class="value" value="'+obj[i].value+'" name="value"></td>', 
            		selected += '<td><input type="text" id="'+random+'_rb" class="rb" value=\''+obj[i].rb+'\' name="rb"></td>';
            		/* if(i==0)
            		{
            			selected += '<td><a id="addCondition" href="javascript:void(0)"></a>';
            		}
            		else
            		{ */
            			selected += '<td><a class="deleteCondition" href="javascript:void(0)"></a>'; 
            		//}
            		selected += "</td>"; 
            		selected += "</tr>";
            		
            		
            		$("#advanceSearchTable").append(selected);
            		$(a).trigger(topJUI.eventType.initUI.advanceSearchForm);
            		initFiled(random+"_field",context,tableName);
            		//渲染之后还要把可下拉选择的值设置回去
            		$('#'+random+'_join').combobox('setValue',obj[i].join);
            		$('#'+random+'_lb').combobox('setValue',obj[i].lb);
            		$('#'+random+'_op').combobox('setValue',obj[i].op);
            		$('#'+random+'_rb').combobox('setValue',obj[i].rb);
            		selected = "";
            	}
        	}
        }
	});
}

function initFiled(id,context,tableName){
	if(id)
	{
		$("#"+id).combobox({
    		panelWidth:400,
    	    valueField: 'tableColumn',     
    	        textField: 'columnDesc',   
    	        filter: function(q, row){  
    	            var opts = $(this).combobox('options');  
    	            return row[opts.textField].indexOf(q) >-1;;  
    	        },  
    	        url:context+'/wf/workflowCondition/findFormColumn?tableName='+tableName,
    	        //面板展开时触发
    	        onShowPanel: function () {
    	            // 动态调整高度  
    	            if (12 < 10) {  
    	                $(this).combobox('panel').height("auto");  
    	            }else{
    	                $(this).combobox('panel').height(200);
    	            }
    	        }
    	});
	}
	else
	{
		$(".field").combobox({
    		panelWidth:400,
    	    valueField: 'tableColumn',     
    	        textField: 'columnDesc',   
    	        filter: function(q, row){  
    	            var opts = $(this).combobox('options');  
    	            return row[opts.textField].indexOf(q) >-1;;  
    	        },  
    	        url:context+'/wf/workflowCondition/findFormColumn?tableName='+tableName,
    	        //面板展开时触发
    	        onShowPanel: function () {
    	            // 动态调整高度  
    	            if (12 < 10) {  
    	                $(this).combobox('panel').height("auto");  
    	            }else{
    	                $(this).combobox('panel').height(200);
    	            }
    	        }
    	});
	}
}

/**
 * 显示默认排序
 * @param tableName
 * @param datagridId
 * @param defalutColumns
 */
function initDatagridDefaultR(tableName,datagridId,defalutColumns)
{
    var s = "";  
    if(!defalutColumns)
    {
		/*s += "[[";  
		if("form_create_project"==tableName)
		{
		    s += "{field:'applyUserName',title:'申请人',sortable:true,width:150},";
	        s += "{field:'applyDate',title:'申请时间',sortable:true,width:150,formatter:timeFormatter},";
	        s += "{field:'updateDate',title:'修改时间',sortable:true,width:150,formatter:timeFormatter},";
	        s += "{field:'flowStatus',title:'状态',sortable:true,formatter:flowStatueFormatterN,width:130},";
	        s += "{field:'currentOperator',title:'当前审批人',sortable:false,width:150},";
	        s += "{field:'level',title:'level等级',sortable:true,width:50},";
	        s += "{field:'levelValue',title:'level等级(中文)',sortable:true,width:350},";
	        s += "{field:'projectType',title:'项目类型',sortable:true},";
	        s += "{field:'projectSponsorType',title:'项目发起分类',sortable:true,width:150},";
	        s += "{field:'sponsorNames',title:'Sponsor',sortable:true,width:200},";
	        s += "{field:'leaderNames',title:'Leader',sortable:true,width:200},";
	        s += "{field:'acsNumber',title:'ACS编码',sortable:true,width:100},";
	        s += "{field:'fixedAssets',title:'是否固定资产',sortable:true,width:150},";
	        s += "{field:'officeCode',title:'公司代码',sortable:true,width:100},";
	        s += "{field:'officeName',title:'分公司/办事处',sortable:true,width:150}";
	        
		}
		
		s += "]]";  */
    }
    else
    {
    	s=defalutColumns;
    }
    options={};  
    options.columns = eval(s); 
    var activeDrag = $("#activeDrag").val();
    if(activeDrag && "yes"==activeDrag)
    {
    	$('#'+datagridId).datagrid(options).datagrid("columnMoving");
    }
    else
    {
    	$('#'+datagridId).datagrid(options);
    }
}

function initMyDatagridOptionsR(context,tableName,datagridId){
	if(!tableName)
	{
		tableName = $(this).attr("id");
	}
	$.ajax({
		type: 'get',
		dataType: "json", //表示返回值类型，不必须
		data: {"tableName":tableName},
		url: context+'/sys/datagridOptions/getByTableNameAndUser',
		success: function(data){
			var initSavedColumn = false;
			if(data)
		  	{
		  		if(typeof data == "string")
		  		{
		  			data = JSON.parse(data);
		  		}
		  		//console.log(data.length);
	  			if(data.length>0)
	  			{
	  				initSavedColumn = true;
	  				var s = "";  
	  				s += "[[";  
	  				for(var i=0;i<data.length;i++)
	  				{
	  					//
	  					var one = data[i];
	  					s+="{field:'"+one.field+"',title:'"+one.title+"'";
	  					if(one.checkbox){s+=",checkbox:"+one.checkbox;}
	  					if(one.width){s+=",width:"+one.width;}
	  					if(one.sortable){s+=",sortable:"+one.sortable;}
	  					if(one.formatter){s+=",formatter:"+one.formatter;}
	  					//对hidden的处理：因为右键选择之后也是设置hidden为true的，如果本来就必须设置为true的话需要单独加上
	  					
	  					s+="},";
	  				}
	  				s = s.substring(0,s.length-1);
	  				s = s + "]]";  
	  			    options={};  
	  			    options.columns = eval(s); 
	  			    //console.log(options.columns);
	  			    var activeDrag = $("#activeDrag").val();
		  		    if(activeDrag && "yes"==activeDrag)
		  		    {
		  		    	$('#'+datagridId).datagrid(options).datagrid("columnMoving");
		  		    }
		  		    else
		  		    {
		  		    	$('#'+datagridId).datagrid(options);
		  		    }
	  			}
		  	}
			if(!initSavedColumn)
			{
				//初始化默认的列表
				initDatagridDefaultR(tableName);
			}
		}
	});
}

function myDatagridOptionsR(context,tableName,datagridId){
	//var row1 = $('#'+datagridId).datagrid('getColumnFields');               // 获取解冻列
	//var row2 = $('#'+datagridId).datagrid('getColumnFields', true);       // 获取冻结列
	var row = $('#'+datagridId).datagrid('options'); 
	var columns = row.columns;//非冻结列
	var frozenColumns =  row.frozenColumns;//冻结列
	//console.log(columns);
	//console.log(frozenColumns);
	var optionList=[];
	//冻结列不需要重新设置，也不给修改的
	/* if(frozenColumns && frozenColumns.length>0)
	{
		for(var i=0;i<frozenColumns.length;i++)
		{
			var oneColumn = frozenColumns[i];
			if(oneColumn && oneColumn.length>0)
			{
				for(var j=0;j<oneColumn.length;j++)
				{
					var col = oneColumn[j];
					var one={};
					one.title=col.title;// string 列标题文本。 undefined 
					one.field=col.field;// string 列字段名称。 undefined 
					one.width=col.width;// number 列的宽度。如果没有定义，宽度将自动扩充以适应其内容。 undefined 
					one.sortable=col.sortable;// boolean 如果为true，则允许列使用排序。 undefined 
					one.formatter = (col.formatter&&col.formatter.name)?col.formatter.name:"";//
					one.checkbox = col.checkbox;;// boolean 如果为true，则显示复选框。该复选框列固定宽度。 undefined 
					one.frozenColumns = "yes";
					optionList.push(one);
				}
			}
		}
	} */
	if(columns && columns.length>0)
	{
		for(var i=0;i<columns.length;i++)
		{
			var oneColumn = columns[i];
			if(oneColumn && oneColumn.length>0)
			{
				for(var j=0;j<oneColumn.length;j++)
				{
					var col = oneColumn[j];
					var one={};
					if(!col.hidden)
					{
						one.title=col.title;// string 列标题文本。 undefined 
						one.field=col.field;// string 列字段名称。 undefined 
						one.width=col.width;// number 列的宽度。如果没有定义，宽度将自动扩充以适应其内容。 undefined 
						one.sortable=col.sortable;// boolean 如果为true，则允许列使用排序。 undefined 
						one.formatter = (col.formatter&&col.formatter.name)?col.formatter.name:"";//
						one.checkbox = col.checkbox;;// boolean 如果为true，则显示复选框。该复选框列固定宽度。 undefined 
						one.frozenColumns = "no";
						optionList.push(one);
					}
				}
			}
		}
	}
	$.ajax({
		type: 'POST',
		dataType: "json", //表示返回值类型，不必须
		data: {"detailList":JSON.stringify(optionList),"tableName":tableName},
		url: context+'/sys/datagridOptions/save',
		beforeSend: function () {
            $.messager.progress({
                text: "正在操作..."
            })
        },success: function(data){
        	$.messager.progress("close");
			if(data)
		  	{
		  		if(typeof data == "string")
		  		{
		  			data = JSON.parse(data);
		  		}
	  			$.iMessager.alert({title: data.title, msg: data.message,top:150});
		  	}else
			{
				$.iMessager.alert({title: "提示", msg: "保存排序失败！",top:150});
			}
		}, error: function(data){
        	$.messager.progress("close");
        	if(data)
		  	{
		  		if(typeof data == "string")
		  		{
		  			data = JSON.parse(data);
		  		}
	  			$.iMessager.alert({title: data.title, msg: data.message,top:150});
		  	}else
			{
				$.iMessager.alert({title: "提示", msg: "保存排序失败！",top:150});
			}
        }
	});
}

function closeAndOpenR(dataGridId,formUrl,operId) {
	var selectnum = $('#'+dataGridId).datagrid('getSelections');  
	if (!selectnum || selectnum.length == 0) {
		$.iMessager.alert('提示', '请选中你所需要操作的记录！', 'messager-info');
		return null;
	}
	var title = "确认操作已选择数据？"
	if("deleteAll"==operId){title = "确认关闭已选择数据？"}
	else if("open"==operId){title = "确认重打开已选择数据？"}
	$.messager.confirm("提示", title, function (a) {
		if(a)
		{
			var selectedIds = "";
			var passAll = true;
			for(var i=0;i<selectnum.length;i++)
			{
				selectedIds+=selectnum[i].id+",";
				if("deleteAll"==operId){
					if(selectnum[i].orderStatus=="关闭"){
						$.iMessager.alert('提示', '已关闭的数据不能再执行关闭操作！', 'messager-info');
						return null;
						passAll = false;
					}
				}
				else if("open"==operId){
					if(selectnum[i].orderStatus!="关闭"){
						$.iMessager.alert('提示', '只有已关闭的数据才能重打开！', 'messager-info');
						return null;
						passAll = false;
					}
				}
			}
			selectedIds=selectedIds.substring(0,selectedIds.length-1);
			if(selectedIds&&passAll)
			{
				$.ajax({
			        url: formUrl,
			        type: "get",
			        data: {"id":selectedIds,"operType":operId},
			        dataType: "json",
			        async: !1,
			       // contentType: "application/x-www-form-urlencoded;charset=utf-8",//"application/json;charset=utf-8"
			        beforeSend: function () {
			            $.messager.progress({
			                text: "正在操作..."
			            })
			        }, success: function (data) {
			            $.messager.progress("close");
			            if(data)
					  	{
					  		if(typeof data == "string")
					  		{
					  			data = JSON.parse(data);
					  		}
					  		if(data.status)
					  		{
					  			$.messager.alert("确认", data.message,"",function(){  
					  				$('#'+dataGridId).datagrid('reload');
					        	}); 
					  		}
					  		else
					  		{
					  			$.iMessager.alert({title: data.title, msg: data.message});
					  		}
					  	}
			        }, error: function(data){
			        	$.messager.progress("close");
			        	if(data)
					  	{
					  		if(typeof data == "string")
					  		{
					  			data = JSON.parse(data);
					  		}
					  		if(data.status)
					  		{
					  			$.messager.alert("确认", data.message,"",function(){  
					  				$('#'+dataGridId).datagrid('reload');
					        	}); 
					  		}
					  		else
					  		{
					  			$.iMessager.alert({title: data.title, msg: data.message});
					  		}
					  	}
			        }
			    })
			}
		}
	});
}

function deleteAndOpenR(dataGridId,formUrl,operId,ifAdmin) {
	var selectnum = $('#'+dataGridId).datagrid('getSelections');  
	if (!selectnum || selectnum.length == 0) {
		$.iMessager.alert('提示', '请选中你所需要操作的记录！', 'messager-info');
		return null;
	}
	var title = "确认操作已选择数据？"
	if("deleteAll"==operId){title = "确认终止已选择数据？"}
	else if("open"==operId){title = "确认重打开已选择数据？"}
	else if("editAnyway"==operId){title = "确认放开修改已选择数据？"}
	else if("editEnd"==operId){title = "确认结束修改已选择数据？"}
	else if("close"==operId){title = "确认关闭已选择数据？"}
	var currentUserIdList = $("#currentUserIdList").val();
	$.messager.confirm("提示", title, function (a) {
		if(a)
		{
			var selectedIds = "";
			var passAll = true;
			for(var i=0;i<selectnum.length;i++)
			{
				var createById = selectnum[i].createById;
				if(!ifAdmin || "no"==ifAdmin)
				{
					if(("deleteAll"==operId||"editAnyway"==operId||"close"==operId)&&currentUserIdList.indexOf(createById)<0){
						$.iMessager.alert('提示', '只能操作本人创建的数据！', 'messager-info');
						return null;
						passAll = false;
					}
				}
				
				selectedIds+=selectnum[i].id+",";
				if("deleteAll"==operId){
					if(selectnum[i].terminationStatus=="deleteAll"){
						$.iMessager.alert('提示', '已终止的数据不能再执行终止操作！', 'messager-info');
						return null;
						passAll = false;
					}
				}
				else if("open"==operId){
					if(selectnum[i].terminationStatus!="deleteAll"){
						$.iMessager.alert('提示', '只有已终止的数据才能重打开！', 'messager-info');
						return null;
						passAll = false;
					}
				}
				else if("editAnyway"==operId){
					//创建状态也可以放开修改，不然自由创建人自己才能修改
					/*if(selectnum[i].flowStatus=="create"){
						$.iMessager.alert('提示', '创建状态表单不能执行放开操作！', 'messager-info');
						return null;
						passAll = false;
					}*/
					if(selectnum[i].terminationStatus=="deleteAll"){
						$.iMessager.alert('提示', '已终止的数据请先执行重打开操作！', 'messager-info');
						return null;
						passAll = false;
					}
				}
				else if("editEnd"==operId){
					if(selectnum[i].terminationStatus!="editAnyway"){
						$.iMessager.alert('提示', '只有放开修改的数据才能结束修改！', 'messager-info');
						return null;
						passAll = false;
					}
				}
			}
			selectedIds=selectedIds.substring(0,selectedIds.length-1);
			if(selectedIds&&passAll)
			{
				$.ajax({
			        url: formUrl,
			        type: "get",
			        data: {"id":selectedIds,"operType":operId},
			        dataType: "json",
			        async: !1,
			       // contentType: "application/x-www-form-urlencoded;charset=utf-8",//"application/json;charset=utf-8"
			        beforeSend: function () {
			            $.messager.progress({
			                text: "正在操作..."
			            })
			        }, success: function (data) {
			            $.messager.progress("close");
			            if(data)
					  	{
					  		if(typeof data == "string")
					  		{
					  			data = JSON.parse(data);
					  		}
					  		if(data.status)
					  		{
					  			$.messager.alert("确认", data.message,"",function(){  
					  				$('#'+dataGridId).datagrid('reload');
					        	}); 
					  		}
					  		else
					  		{
					  			$.iMessager.alert({title: data.title, msg: data.message});
					  		}
					  	}
			        }, error: function(data){
			        	$.messager.progress("close");
			        	if(data)
					  	{
					  		if(typeof data == "string")
					  		{
					  			data = JSON.parse(data);
					  		}
					  		if(data.status)
					  		{
					  			$.messager.alert("确认", data.message,"",function(){  
					  				$('#'+dataGridId).datagrid('reload');
					        	}); 
					  		}
					  		else
					  		{
					  			$.iMessager.alert({title: data.title, msg: data.message});
					  		}
					  	}
			        }
			    })
			}
		}
	});
}

/**
 * 启用单列排序or多列排序
 */
function activeColumnSortR(id,activeDrag,datagridId){
    if(activeDrag && "yes"==activeDrag)
    {
    	if("sortOne"==id){$('#'+datagridId).datagrid({multiSort:false}).datagrid("columnMoving");}
    	else if("sortAny"==id){$('#'+datagridId).datagrid({multiSort:true}).datagrid("columnMoving");}
    }
    else
    {
    	if("sortOne"==id){$('#'+datagridId).datagrid({multiSort:false});}
    	else if("sortAny"==id){$('#'+datagridId).datagrid({multiSort:true});}
    }
}

function commonAjaxJui(context,url,data)
{
	
}

//------------------可编辑表格-------------------
//var editRow = undefined;
function myAdd(){
	var datagridName = $(this).attr("dgName");
	var editRow = $("#"+datagridName+"EditRow").val();
	var needParent = $("#"+datagridName+"NeedParent").val();
	//console.log(datagridName+"----------------"+needParent);
	if(needParent)
	{
		var parentDgName = $("#"+datagridName+"NeedParent").attr("parentDgName");
		
		var selectnum = $('#'+parentDgName).datagrid('getSelections');  
		if (!selectnum || selectnum.length == 0) {
			$.iMessager.alert('提示', $("#"+datagridName+"NeedParent").attr("title"), 'messager-info');
			return null;
		} else if (selectnum.length > 1) {
			$.iMessager.alert({title: "提示", msg: "当前操作只能选择一条记录!",top:150});
			return null;
		}
		var entityId = selectnum[0].id;
		$("#"+needParent).val(entityId);
		/*if(!$("#"+needParent).val())
		{
			$.iMessager.alert('提示', $("#"+datagridName+"NeedParent").attr("title"), 'messager-info');
			return null;
		}*/
	}
	
  if (editRow) {
      $("#"+datagridName).datagrid('endEdit', editRow);
  }
  if (!editRow) {
      $("#"+datagridName).datagrid('insertRow', {
          index: 0,
          row: {}
      });

      $("#"+datagridName).datagrid('beginEdit', 0);
      editRow = 0;
  }
  $("#"+datagridName+"EditRow").val(editRow);
}
function mySave(){
	var datagridName = $(this).attr("dgName");
	var editRow = $("#"+datagridName+"EditRow").val();
	$("#"+datagridName).datagrid('endEdit', editRow);
	 
  //如果调用acceptChanges(),使用getChanges()则获取不到编辑和新增的数据。

  //使用JSON序列化datarow对象，发送到后台。
  var rows = $("#"+datagridName).datagrid('getChanges');

//使用JSON序列化datarow对象，发送到后台。
  var rowstr = JSON.stringify(rows);
  //console.log(rowstr);
  /* $.post('${ctx}/wf/nodeParticipate/save', rowstr, function (data) {
  }); */
  var operateUrl = $("#"+datagridName+"Url").val();
  var url = $("#"+datagridName+"SaveUrl").val();
  var needParent = $("#"+datagridName+"NeedParent").val();
  if(needParent)
  {
	  var paramName = $("#"+datagridName+"NeedParent").attr("paramName");
	  if(url.indexOf("?")>-1)
	  {
		  url+="&";
	  }
	  else
	  {
		  url+="?";
	  }
	  url+=paramName+"="+$("#"+needParent).val();
  }
  if(rowstr)
	{
		$.ajax({
	        url: url,
	        type: "post",
	        data: {"valuesArr":rowstr},
	        dataType: "json",
	        async: !1,
	       // contentType: "application/x-www-form-urlencoded;charset=utf-8",//"application/json;charset=utf-8"
	        beforeSend: function () {
	            $.messager.progress({
	                text: "正在操作..."
	            })
	        }, success: function (data) {
	            $.messager.progress("close");
	            if(data)
			  	{
			  		if(typeof data == "string")
			  		{
			  			data = JSON.parse(data);
			  		}
			  		if(data.status)
			  		{
			  			$.messager.alert("确认", data.message,"",function(){  
			  				var openType = $("#openType").val();
			  				if(!needParent)// && openType && "fromWindow"==openType
			  				{
			  					//$("#parentId").val(data.entityId);
			  					myNormalQuery("normal");
			  				}
			  				else
			  				{
			  					//$("#"+datagridName).datagrid('reload');
			  					myNormalQueryDetail("normal");
			  				}
			        	}); 
			  		}
			  		else
			  		{
			  			$.messager.alert("确认", data.message,"",function(){  
			  				//$("#"+datagridName).datagrid('reload');
			        	});
			  		}
			  	}
	        }, error: function(data){
	        	$.messager.progress("close");
	        	if(data)
			  	{
			  		if(typeof data == "string")
			  		{
			  			data = JSON.parse(data);
			  		}
			  		if(data.status)
			  		{
			  			var openType = $("#openType").val();
		  				if(!needParent)// && openType && "fromWindow"==openType
		  				{
		  					//$("#parentId").val(data.entityId);
		  					myNormalQuery("normal");
		  				}
		  				else
		  				{
		  					//$("#"+datagridName).datagrid('reload');
		  					myNormalQueryDetail("normal");
		  				}
			  		}
			  		else
			  		{
			  			$.messager.alert("确认", data.message,"",function(){  
			  				//$("#"+datagridName).datagrid('reload');
			        	});
			  		}
			  	}
	        }
	    })
	}
}

function myEdit(){
	var datagridName = $(this).attr("dgName");
	var editRow = $("#"+datagridName+"EditRow").val();
	var row = $("#"+datagridName).datagrid('getSelected');
  if (row !=null) {
      if (editRow) {
          $("#"+datagridName).datagrid('endEdit', editRow);
      }

      if (!editRow) {
          var index = $("#"+datagridName).datagrid('getRowIndex', row);
          $("#"+datagridName).datagrid('beginEdit', index);
          editRow = index;
          $("#"+datagridName).datagrid('unselectAll');
      }
      $("#"+datagridName+"EditRow").val(editRow);
  } else {
       
  }
}

function myCancel(){
	var datagridName = $(this).attr("dgName");
	editRow = undefined;
    $("#"+datagridName).datagrid('rejectChanges');
    $("#"+datagridName).datagrid('unselectAll');
    $("#"+datagridName+"EditRow").val(editRow);
}


function myDelete(){
	var datagridName = $(this).attr("dgName");
	var editRow = $("#"+datagridName+"EditRow").val();
	//var row = $("#customerInfoDetailDg").datagrid('getSelections');
  var rows = $("#"+datagridName).datagrid('getSelections');
  //var rows = $("#customerInfoDetailDg").datagrid('getSelected');
  if(rows && rows.length>0)
  {
  	var operateUrl = $("#"+datagridName+"Url").val();
    var url = $("#"+datagridName+"DeleteUrl").val();
  	$.messager.confirm('确认','确认删除?',function(data){  
  		if(data)
  		{
  			var ids = "";
  	      	for(var i=0;i<rows.length;i++)
  	      	{
  	      		ids += rows[i].id+",";
  	      		var rowIndex = $("#"+datagridName).datagrid('getRowIndex',rows[i]); 
  	      		$("#"+datagridName).datagrid('deleteRow',rowIndex);
  	      	}
  	          if(ids){  
  	              $.ajax({  
  	              	type: "post",
  	                  url:url+'?id='+ids, 
  	                  beforeSend: function () {
  				            $.messager.progress({
  				                text: "正在操作..."
  				            })
  				        },
  	                  success: function (data) {
  				            $.messager.progress("close");
  				            if(data)
  						  	{
  						  		if(typeof data == "string")
  						  		{
  						  			data = JSON.parse(data);
  						  		}
  						  		if(data.status)
  						  		{
  						  			$.messager.alert("确认", data.message,"",function(){  
  						  				$('#'+datagridName).datagrid('reload');
  						        	}); 
  						  		}
  						  		else
  						  		{
  						  			$.iMessager.alert({title: data.title, msg: data.message});
  						  		}
  						  	}
  				        }, error: function(data){
  				        	$.messager.progress("close");
  				        	if(data)
  						  	{
  						  		if(typeof data == "string")
  						  		{
  						  			data = JSON.parse(data);
  						  		}
  						  		if(data.status)
  						  		{
  						  			$.messager.alert("确认", data.message,"",function(){  
  						  				$('#'+datagridName).datagrid('reload');
  						        	}); 
  						  		}
  						  		else
  						  		{
  						  			$.iMessager.alert({title: data.title, msg: data.message});
  						  		}
  						  	}
  				        }
  	              });
  	          }
  		  }
      }) 
  }
  else
  {
  	$.iMessager.alert('提示', '请选中你所需要操作的记录！', 'messager-info');
  	return;
  } 
}

function myUp(){
	var datagridName = $(this).attr("dgName");
	var row = $("#"+datagridName).datagrid('getSelected');
  var index = $("#"+datagridName).datagrid('getRowIndex', row);
  mysort(index, 'up', datagridName);
}
function myDown(){
	var datagridName = $(this).attr("dgName");
	var row = $("#"+datagridName).datagrid('getSelected');
  var index = $("#"+datagridName).datagrid('getRowIndex', row);
  mysort(index, 'down', datagridName);
}

function mysort(index, type, gridname) {
  if ("up" == type) {
      if (index != 0) {
          var toup = $('#' + gridname).datagrid('getData').rows[index];
          var todown = $('#' + gridname).datagrid('getData').rows[index - 1];
          $('#' + gridname).datagrid('getData').rows[index] = todown;
          $('#' + gridname).datagrid('getData').rows[index - 1] = toup;
          $('#' + gridname).datagrid('refreshRow', index);
          $('#' + gridname).datagrid('refreshRow', index - 1);
          $('#' + gridname).datagrid('unselectAll');
          $('#' + gridname).datagrid('selectRow', index - 1);
      }
  } else if ("down" == type) {
      var rows = $('#' + gridname).datagrid('getRows').length;
      if (index != rows - 1) {
          var todown = $('#' + gridname).datagrid('getData').rows[index];
          var toup = $('#' + gridname).datagrid('getData').rows[index + 1];
          $('#' + gridname).datagrid('getData').rows[index + 1] = todown;
          $('#' + gridname).datagrid('getData').rows[index] = toup;
          $('#' + gridname).datagrid('refreshRow', index);
          $('#' + gridname).datagrid('refreshRow', index + 1);
          $('#' + gridname).datagrid('unselectAll');
          $('#' + gridname).datagrid('selectRow', index + 1);
      }
  }
}

function myOnAfterEdit(rowIndex, rowData, changes) {
	var queryEntrance = $("#queryEntrance").val();
	if(queryEntrance && queryEntrance!="fromSelect")
	{
	var datagridName = $(this).attr("id");
	var editRow = undefined;
	$("#"+datagridName+"EditRow").val(editRow);
	}
}
function myOnDblClickRow(rowIndex, rowData) {
	var queryEntrance = $("#queryEntrance").val();
	if(queryEntrance && queryEntrance!="fromSelect")
	{
	var datagridName = $(this).attr("id");
	var editRow = $("#"+datagridName+"EditRow").val();
	//console.log(editRow+"------------"+(editRow != undefined));
	if (editRow) {
		$("#"+datagridName).datagrid('endEdit', editRow);
	}
	
	if (!editRow) {
		$("#"+datagridName).datagrid('beginEdit', rowIndex);
		editRow = rowIndex;
	}
	$("#"+datagridName+"EditRow").val(editRow);
	}
}
function myOnClickRow(rowIndex,rowData){
	var queryEntrance = $("#queryEntrance").val();
	if(queryEntrance && queryEntrance!="fromSelect")
	{
		var datagridName = $(this).attr("id");
		var editRow = $("#"+datagridName+"EditRow").val();
		if (editRow) {
			$("#"+datagridName).datagrid('endEdit', editRow);
		}
	}
}
//------------------可编辑表格-----------------

function myOnLoadError(){};